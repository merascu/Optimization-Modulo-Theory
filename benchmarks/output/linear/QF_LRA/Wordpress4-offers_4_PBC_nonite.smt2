(set-info :smt-lib-version 2.6)
(set-logic QF_LRA)
(set-info :source |
Generated by: Mădălina Erașcu, Răzvan Meteș 
Generated on: 2019-03-07
Application: Wordpress4
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :minimum 28328/1000

(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun VM6Type () Real)
(declare-fun VM7Type () Real)
(declare-fun VM8Type () Real)
(declare-fun VM9Type () Real)
(declare-fun VM10Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun PriceProv6 () Real)
(declare-fun C5_VM6 () Bool)
(declare-fun C4_VM6 () Bool)
(declare-fun C3_VM6 () Bool)
(declare-fun C2_VM6 () Bool)
(declare-fun C1_VM6 () Bool)
(declare-fun PriceProv7 () Real)
(declare-fun C5_VM7 () Bool)
(declare-fun C4_VM7 () Bool)
(declare-fun C3_VM7 () Bool)
(declare-fun C2_VM7 () Bool)
(declare-fun C1_VM7 () Bool)
(declare-fun PriceProv8 () Real)
(declare-fun C5_VM8 () Bool)
(declare-fun C4_VM8 () Bool)
(declare-fun C3_VM8 () Bool)
(declare-fun C2_VM8 () Bool)
(declare-fun C1_VM8 () Bool)
(declare-fun PriceProv9 () Real)
(declare-fun C5_VM9 () Bool)
(declare-fun C4_VM9 () Bool)
(declare-fun C3_VM9 () Bool)
(declare-fun C2_VM9 () Bool)
(declare-fun C1_VM9 () Bool)
(declare-fun PriceProv10 () Real)
(declare-fun C5_VM10 () Bool)
(declare-fun C4_VM10 () Bool)
(declare-fun C3_VM10 () Bool)
(declare-fun C2_VM10 () Bool)
(declare-fun C1_VM10 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun StorageProv6 () Real)
(declare-fun MemProv6 () Real)
(declare-fun ProcProv6 () Real)
(declare-fun StorageProv7 () Real)
(declare-fun MemProv7 () Real)
(declare-fun ProcProv7 () Real)
(declare-fun StorageProv8 () Real)
(declare-fun MemProv8 () Real)
(declare-fun ProcProv8 () Real)
(declare-fun StorageProv9 () Real)
(declare-fun MemProv9 () Real)
(declare-fun ProcProv9 () Real)
(declare-fun StorageProv10 () Real)
(declare-fun MemProv10 () Real)
(declare-fun ProcProv10 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun p16 () Int)
(declare-fun p26 () Int)
(declare-fun p36 () Int)
(declare-fun p46 () Int)
(declare-fun p56 () Int)
(declare-fun p17 () Int)
(declare-fun p27 () Int)
(declare-fun p37 () Int)
(declare-fun p47 () Int)
(declare-fun p57 () Int)
(declare-fun p18 () Int)
(declare-fun p28 () Int)
(declare-fun p38 () Int)
(declare-fun p48 () Int)
(declare-fun p58 () Int)
(declare-fun p19 () Int)
(declare-fun p29 () Int)
(declare-fun p39 () Int)
(declare-fun p49 () Int)
(declare-fun p59 () Int)
(declare-fun p110 () Int)
(declare-fun p210 () Int)
(declare-fun p310 () Int)
(declare-fun p410 () Int)
(declare-fun p510 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun m16 () Int)
(declare-fun m26 () Int)
(declare-fun m36 () Int)
(declare-fun m46 () Int)
(declare-fun m56 () Int)
(declare-fun m17 () Int)
(declare-fun m27 () Int)
(declare-fun m37 () Int)
(declare-fun m47 () Int)
(declare-fun m57 () Int)
(declare-fun m18 () Int)
(declare-fun m28 () Int)
(declare-fun m38 () Int)
(declare-fun m48 () Int)
(declare-fun m58 () Int)
(declare-fun m19 () Int)
(declare-fun m29 () Int)
(declare-fun m39 () Int)
(declare-fun m49 () Int)
(declare-fun m59 () Int)
(declare-fun m110 () Int)
(declare-fun m210 () Int)
(declare-fun m310 () Int)
(declare-fun m410 () Int)
(declare-fun m510 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(declare-fun s16 () Int)
(declare-fun s26 () Int)
(declare-fun s36 () Int)
(declare-fun s46 () Int)
(declare-fun s56 () Int)
(declare-fun s17 () Int)
(declare-fun s27 () Int)
(declare-fun s37 () Int)
(declare-fun s47 () Int)
(declare-fun s57 () Int)
(declare-fun s18 () Int)
(declare-fun s28 () Int)
(declare-fun s38 () Int)
(declare-fun s48 () Int)
(declare-fun s58 () Int)
(declare-fun s19 () Int)
(declare-fun s29 () Int)
(declare-fun s39 () Int)
(declare-fun s49 () Int)
(declare-fun s59 () Int)
(declare-fun s110 () Int)
(declare-fun s210 () Int)
(declare-fun s310 () Int)
(declare-fun s410 () Int)
(declare-fun s510 () Int)
(assert (or (= VM1Type 1.0) (= VM1Type 2.0) (= VM1Type 3.0) (= VM1Type 4.0)))
(assert (or (= VM2Type 1.0) (= VM2Type 2.0) (= VM2Type 3.0) (= VM2Type 4.0)))
(assert (or (= VM3Type 1.0) (= VM3Type 2.0) (= VM3Type 3.0) (= VM3Type 4.0)))
(assert (or (= VM4Type 1.0) (= VM4Type 2.0) (= VM4Type 3.0) (= VM4Type 4.0)))
(assert (or (= VM5Type 1.0) (= VM5Type 2.0) (= VM5Type 3.0) (= VM5Type 4.0)))
(assert (or (= VM6Type 1.0) (= VM6Type 2.0) (= VM6Type 3.0) (= VM6Type 4.0)))
(assert (or (= VM7Type 1.0) (= VM7Type 2.0) (= VM7Type 3.0) (= VM7Type 4.0)))
(assert (or (= VM8Type 1.0) (= VM8Type 2.0) (= VM8Type 3.0) (= VM8Type 4.0)))
(assert (or (= VM9Type 1.0) (= VM9Type 2.0) (= VM9Type 3.0) (= VM9Type 4.0)))
(assert (or (= VM10Type 1.0) (= VM10Type 2.0) (= VM10Type 3.0) (= VM10Type 4.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6)
    (= PriceProv6 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7)
    (= PriceProv7 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8)
    (= PriceProv8 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9)
    (= PriceProv9 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
    (= PriceProv10 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 1.0))
    (and (= PriceProv6 8403.0)
         (= ProcProv6 64.0)
         (= MemProv6 976000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 1.0))
    (and (= PriceProv7 8403.0)
         (= ProcProv7 64.0)
         (= MemProv7 976000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 1.0))
    (and (= PriceProv8 8403.0)
         (= ProcProv8 64.0)
         (= MemProv8 976000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 1.0))
    (and (= PriceProv9 8403.0)
         (= ProcProv9 64.0)
         (= MemProv9 976000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 1.0))
    (and (= PriceProv10 8403.0)
         (= ProcProv10 64.0)
         (= MemProv10 976000.0)
         (= StorageProv10 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 2.0))
    (and (= PriceProv6 9152.0)
         (= ProcProv6 64.0)
         (= MemProv6 488000.0)
         (= StorageProv6 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 2.0))
    (and (= PriceProv7 9152.0)
         (= ProcProv7 64.0)
         (= MemProv7 488000.0)
         (= StorageProv7 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 2.0))
    (and (= PriceProv8 9152.0)
         (= ProcProv8 64.0)
         (= MemProv8 488000.0)
         (= StorageProv8 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 2.0))
    (and (= PriceProv9 9152.0)
         (= ProcProv9 64.0)
         (= MemProv9 488000.0)
         (= StorageProv9 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 2.0))
    (and (= PriceProv10 9152.0)
         (= ProcProv10 64.0)
         (= MemProv10 488000.0)
         (= StorageProv10 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 3.0))
    (and (= PriceProv6 2808.0)
         (= ProcProv6 32.0)
         (= MemProv6 60000.0)
         (= StorageProv6 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 3.0))
    (and (= PriceProv7 2808.0)
         (= ProcProv7 32.0)
         (= MemProv7 60000.0)
         (= StorageProv7 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 3.0))
    (and (= PriceProv8 2808.0)
         (= ProcProv8 32.0)
         (= MemProv8 60000.0)
         (= StorageProv8 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 3.0))
    (and (= PriceProv9 2808.0)
         (= ProcProv9 32.0)
         (= MemProv9 60000.0)
         (= StorageProv9 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 3.0))
    (and (= PriceProv10 2808.0)
         (= ProcProv10 32.0)
         (= MemProv10 60000.0)
         (= StorageProv10 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 4.0))
    (and (= PriceProv6 1600.0)
         (= ProcProv6 16.0)
         (= MemProv6 122000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 4.0))
    (and (= PriceProv7 1600.0)
         (= ProcProv7 16.0)
         (= MemProv7 122000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 4.0))
    (and (= PriceProv8 1600.0)
         (= ProcProv8 16.0)
         (= MemProv8 122000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 4.0))
    (and (= PriceProv9 1600.0)
         (= ProcProv9 16.0)
         (= MemProv9 122000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 4.0))
    (and (= PriceProv10 1600.0)
         (= ProcProv10 16.0)
         (= MemProv10 122000.0)
         (= StorageProv10 1000.0))))
(assert ((_ at-least 4)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 2)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert ((_ at-least 2)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10))
(assert ((_ pble 0 7 7 7 7 7 7 7 7 7 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-most 1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ pble 0 3 3 3 3 3 3 3 3 3 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ pble 0 2 2 2 2 2 2 2 2 2 2 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)
    ((_ at-least 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)
    ((_ at-least 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ at-most 1) C3_VM1 C1_VM1))
(assert ((_ at-most 1) C3_VM1 C2_VM1))
(assert ((_ at-most 1) C3_VM1 C5_VM1))
(assert ((_ at-most 1) C3_VM2 C1_VM2))
(assert ((_ at-most 1) C3_VM2 C2_VM2))
(assert ((_ at-most 1) C3_VM2 C5_VM2))
(assert ((_ at-most 1) C3_VM3 C1_VM3))
(assert ((_ at-most 1) C3_VM3 C2_VM3))
(assert ((_ at-most 1) C3_VM3 C5_VM3))
(assert ((_ at-most 1) C3_VM4 C1_VM4))
(assert ((_ at-most 1) C3_VM4 C2_VM4))
(assert ((_ at-most 1) C3_VM4 C5_VM4))
(assert ((_ at-most 1) C3_VM5 C1_VM5))
(assert ((_ at-most 1) C3_VM5 C2_VM5))
(assert ((_ at-most 1) C3_VM5 C5_VM5))
(assert ((_ at-most 1) C3_VM6 C1_VM6))
(assert ((_ at-most 1) C3_VM6 C2_VM6))
(assert ((_ at-most 1) C3_VM6 C5_VM6))
(assert ((_ at-most 1) C3_VM7 C1_VM7))
(assert ((_ at-most 1) C3_VM7 C2_VM7))
(assert ((_ at-most 1) C3_VM7 C5_VM7))
(assert ((_ at-most 1) C3_VM8 C1_VM8))
(assert ((_ at-most 1) C3_VM8 C2_VM8))
(assert ((_ at-most 1) C3_VM8 C5_VM8))
(assert ((_ at-most 1) C3_VM9 C1_VM9))
(assert ((_ at-most 1) C3_VM9 C2_VM9))
(assert ((_ at-most 1) C3_VM9 C5_VM9))
(assert ((_ at-most 1) C3_VM10 C1_VM10))
(assert ((_ at-most 1) C3_VM10 C2_VM10))
(assert ((_ at-most 1) C3_VM10 C5_VM10))
(assert ((_ at-most 1) C4_VM1 C1_VM1))
(assert ((_ at-most 1) C4_VM1 C2_VM1))
(assert ((_ at-most 1) C4_VM1 C5_VM1))
(assert ((_ at-most 1) C4_VM2 C1_VM2))
(assert ((_ at-most 1) C4_VM2 C2_VM2))
(assert ((_ at-most 1) C4_VM2 C5_VM2))
(assert ((_ at-most 1) C4_VM3 C1_VM3))
(assert ((_ at-most 1) C4_VM3 C2_VM3))
(assert ((_ at-most 1) C4_VM3 C5_VM3))
(assert ((_ at-most 1) C4_VM4 C1_VM4))
(assert ((_ at-most 1) C4_VM4 C2_VM4))
(assert ((_ at-most 1) C4_VM4 C5_VM4))
(assert ((_ at-most 1) C4_VM5 C1_VM5))
(assert ((_ at-most 1) C4_VM5 C2_VM5))
(assert ((_ at-most 1) C4_VM5 C5_VM5))
(assert ((_ at-most 1) C4_VM6 C1_VM6))
(assert ((_ at-most 1) C4_VM6 C2_VM6))
(assert ((_ at-most 1) C4_VM6 C5_VM6))
(assert ((_ at-most 1) C4_VM7 C1_VM7))
(assert ((_ at-most 1) C4_VM7 C2_VM7))
(assert ((_ at-most 1) C4_VM7 C5_VM7))
(assert ((_ at-most 1) C4_VM8 C1_VM8))
(assert ((_ at-most 1) C4_VM8 C2_VM8))
(assert ((_ at-most 1) C4_VM8 C5_VM8))
(assert ((_ at-most 1) C4_VM9 C1_VM9))
(assert ((_ at-most 1) C4_VM9 C2_VM9))
(assert ((_ at-most 1) C4_VM9 C5_VM9))
(assert ((_ at-most 1) C4_VM10 C1_VM10))
(assert ((_ at-most 1) C4_VM10 C2_VM10))
(assert ((_ at-most 1) C4_VM10 C5_VM10))
(assert ((_ at-most 1) C5_VM1 C2_VM1))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C2_VM2))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C2_VM3))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C2_VM4))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C2_VM5))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ at-most 1) C5_VM6 C2_VM6))
(assert ((_ at-most 1) C5_VM6 C3_VM6))
(assert ((_ at-most 1) C5_VM6 C4_VM6))
(assert ((_ at-most 1) C5_VM7 C2_VM7))
(assert ((_ at-most 1) C5_VM7 C3_VM7))
(assert ((_ at-most 1) C5_VM7 C4_VM7))
(assert ((_ at-most 1) C5_VM8 C2_VM8))
(assert ((_ at-most 1) C5_VM8 C3_VM8))
(assert ((_ at-most 1) C5_VM8 C4_VM8))
(assert ((_ at-most 1) C5_VM9 C2_VM9))
(assert ((_ at-most 1) C5_VM9 C3_VM9))
(assert ((_ at-most 1) C5_VM9 C4_VM9))
(assert ((_ at-most 1) C5_VM10 C2_VM10))
(assert ((_ at-most 1) C5_VM10 C3_VM10))
(assert ((_ at-most 1) C5_VM10 C4_VM10))
(assert ((_ at-least 1)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 1)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 2)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 4)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 2)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 4)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 2)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 4)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 2)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 4)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 2)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 4)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (=> (not C1_VM6) (= p16 0)))
(assert (=> C1_VM6 (= p16 2)))
(assert (=> (not C2_VM6) (= p26 0)))
(assert (=> C2_VM6 (= p26 2)))
(assert (=> (not C3_VM6) (= p36 0)))
(assert (=> C3_VM6 (= p36 4)))
(assert (=> (not C4_VM6) (= p46 0)))
(assert (=> C4_VM6 (= p46 4)))
(assert (=> (not C5_VM6) (= p56 0)))
(assert (=> C5_VM6 (= p56 4)))
(assert (=> (not C1_VM7) (= p17 0)))
(assert (=> C1_VM7 (= p17 2)))
(assert (=> (not C2_VM7) (= p27 0)))
(assert (=> C2_VM7 (= p27 2)))
(assert (=> (not C3_VM7) (= p37 0)))
(assert (=> C3_VM7 (= p37 4)))
(assert (=> (not C4_VM7) (= p47 0)))
(assert (=> C4_VM7 (= p47 4)))
(assert (=> (not C5_VM7) (= p57 0)))
(assert (=> C5_VM7 (= p57 4)))
(assert (=> (not C1_VM8) (= p18 0)))
(assert (=> C1_VM8 (= p18 2)))
(assert (=> (not C2_VM8) (= p28 0)))
(assert (=> C2_VM8 (= p28 2)))
(assert (=> (not C3_VM8) (= p38 0)))
(assert (=> C3_VM8 (= p38 4)))
(assert (=> (not C4_VM8) (= p48 0)))
(assert (=> C4_VM8 (= p48 4)))
(assert (=> (not C5_VM8) (= p58 0)))
(assert (=> C5_VM8 (= p58 4)))
(assert (=> (not C1_VM9) (= p19 0)))
(assert (=> C1_VM9 (= p19 2)))
(assert (=> (not C2_VM9) (= p29 0)))
(assert (=> C2_VM9 (= p29 2)))
(assert (=> (not C3_VM9) (= p39 0)))
(assert (=> C3_VM9 (= p39 4)))
(assert (=> (not C4_VM9) (= p49 0)))
(assert (=> C4_VM9 (= p49 4)))
(assert (=> (not C5_VM9) (= p59 0)))
(assert (=> C5_VM9 (= p59 4)))
(assert (=> (not C1_VM10) (= p110 0)))
(assert (=> C1_VM10 (= p110 2)))
(assert (=> (not C2_VM10) (= p210 0)))
(assert (=> C2_VM10 (= p210 2)))
(assert (=> (not C3_VM10) (= p310 0)))
(assert (=> C3_VM10 (= p310 4)))
(assert (=> (not C4_VM10) (= p410 0)))
(assert (=> C4_VM10 (= p410 4)))
(assert (=> (not C5_VM10) (= p510 0)))
(assert (=> C5_VM10 (= p510 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (<= (to_real (+ 0 p16 p26 p36 p46 p56)) ProcProv6))
(assert (<= (to_real (+ 0 p17 p27 p37 p47 p57)) ProcProv7))
(assert (<= (to_real (+ 0 p18 p28 p38 p48 p58)) ProcProv8))
(assert (<= (to_real (+ 0 p19 p29 p39 p49 p59)) ProcProv9))
(assert (<= (to_real (+ 0 p110 p210 p310 p410 p510)) ProcProv10))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 512)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 512)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 2048)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 2048)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 4000)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 512)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 512)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 2048)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 2048)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 4000)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 512)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 512)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 2048)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 2048)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 4000)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 512)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 512)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 2048)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 2048)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 4000)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 512)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 512)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 2048)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 2048)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 4000)))
(assert (=> (not C1_VM6) (= m16 0)))
(assert (=> C1_VM6 (= m16 512)))
(assert (=> (not C2_VM6) (= m26 0)))
(assert (=> C2_VM6 (= m26 512)))
(assert (=> (not C3_VM6) (= m36 0)))
(assert (=> C3_VM6 (= m36 2048)))
(assert (=> (not C4_VM6) (= m46 0)))
(assert (=> C4_VM6 (= m46 2048)))
(assert (=> (not C5_VM6) (= m56 0)))
(assert (=> C5_VM6 (= m56 4000)))
(assert (=> (not C1_VM7) (= m17 0)))
(assert (=> C1_VM7 (= m17 512)))
(assert (=> (not C2_VM7) (= m27 0)))
(assert (=> C2_VM7 (= m27 512)))
(assert (=> (not C3_VM7) (= m37 0)))
(assert (=> C3_VM7 (= m37 2048)))
(assert (=> (not C4_VM7) (= m47 0)))
(assert (=> C4_VM7 (= m47 2048)))
(assert (=> (not C5_VM7) (= m57 0)))
(assert (=> C5_VM7 (= m57 4000)))
(assert (=> (not C1_VM8) (= m18 0)))
(assert (=> C1_VM8 (= m18 512)))
(assert (=> (not C2_VM8) (= m28 0)))
(assert (=> C2_VM8 (= m28 512)))
(assert (=> (not C3_VM8) (= m38 0)))
(assert (=> C3_VM8 (= m38 2048)))
(assert (=> (not C4_VM8) (= m48 0)))
(assert (=> C4_VM8 (= m48 2048)))
(assert (=> (not C5_VM8) (= m58 0)))
(assert (=> C5_VM8 (= m58 4000)))
(assert (=> (not C1_VM9) (= m19 0)))
(assert (=> C1_VM9 (= m19 512)))
(assert (=> (not C2_VM9) (= m29 0)))
(assert (=> C2_VM9 (= m29 512)))
(assert (=> (not C3_VM9) (= m39 0)))
(assert (=> C3_VM9 (= m39 2048)))
(assert (=> (not C4_VM9) (= m49 0)))
(assert (=> C4_VM9 (= m49 2048)))
(assert (=> (not C5_VM9) (= m59 0)))
(assert (=> C5_VM9 (= m59 4000)))
(assert (=> (not C1_VM10) (= m110 0)))
(assert (=> C1_VM10 (= m110 512)))
(assert (=> (not C2_VM10) (= m210 0)))
(assert (=> C2_VM10 (= m210 512)))
(assert (=> (not C3_VM10) (= m310 0)))
(assert (=> C3_VM10 (= m310 2048)))
(assert (=> (not C4_VM10) (= m410 0)))
(assert (=> C4_VM10 (= m410 2048)))
(assert (=> (not C5_VM10) (= m510 0)))
(assert (=> C5_VM10 (= m510 4000)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (<= (to_real (+ 0 m16 m26 m36 m46 m56)) MemProv6))
(assert (<= (to_real (+ 0 m17 m27 m37 m47 m57)) MemProv7))
(assert (<= (to_real (+ 0 m18 m28 m38 m48 m58)) MemProv8))
(assert (<= (to_real (+ 0 m19 m29 m39 m49 m59)) MemProv9))
(assert (<= (to_real (+ 0 m110 m210 m310 m410 m510)) MemProv10))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1000)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 2000)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 500)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 500)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1000)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 2000)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 500)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 500)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1000)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 2000)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 500)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 500)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1000)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 2000)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 500)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 500)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1000)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 2000)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 500)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 500)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (=> (not C1_VM6) (= s16 0)))
(assert (=> C1_VM6 (= s16 1000)))
(assert (=> (not C2_VM6) (= s26 0)))
(assert (=> C2_VM6 (= s26 2000)))
(assert (=> (not C3_VM6) (= s36 0)))
(assert (=> C3_VM6 (= s36 500)))
(assert (=> (not C4_VM6) (= s46 0)))
(assert (=> C4_VM6 (= s46 500)))
(assert (=> (not C5_VM6) (= s56 0)))
(assert (=> C5_VM6 (= s56 500)))
(assert (=> (not C1_VM7) (= s17 0)))
(assert (=> C1_VM7 (= s17 1000)))
(assert (=> (not C2_VM7) (= s27 0)))
(assert (=> C2_VM7 (= s27 2000)))
(assert (=> (not C3_VM7) (= s37 0)))
(assert (=> C3_VM7 (= s37 500)))
(assert (=> (not C4_VM7) (= s47 0)))
(assert (=> C4_VM7 (= s47 500)))
(assert (=> (not C5_VM7) (= s57 0)))
(assert (=> C5_VM7 (= s57 500)))
(assert (=> (not C1_VM8) (= s18 0)))
(assert (=> C1_VM8 (= s18 1000)))
(assert (=> (not C2_VM8) (= s28 0)))
(assert (=> C2_VM8 (= s28 2000)))
(assert (=> (not C3_VM8) (= s38 0)))
(assert (=> C3_VM8 (= s38 500)))
(assert (=> (not C4_VM8) (= s48 0)))
(assert (=> C4_VM8 (= s48 500)))
(assert (=> (not C5_VM8) (= s58 0)))
(assert (=> C5_VM8 (= s58 500)))
(assert (=> (not C1_VM9) (= s19 0)))
(assert (=> C1_VM9 (= s19 1000)))
(assert (=> (not C2_VM9) (= s29 0)))
(assert (=> C2_VM9 (= s29 2000)))
(assert (=> (not C3_VM9) (= s39 0)))
(assert (=> C3_VM9 (= s39 500)))
(assert (=> (not C4_VM9) (= s49 0)))
(assert (=> C4_VM9 (= s49 500)))
(assert (=> (not C5_VM9) (= s59 0)))
(assert (=> C5_VM9 (= s59 500)))
(assert (=> (not C1_VM10) (= s110 0)))
(assert (=> C1_VM10 (= s110 1000)))
(assert (=> (not C2_VM10) (= s210 0)))
(assert (=> C2_VM10 (= s210 2000)))
(assert (=> (not C3_VM10) (= s310 0)))
(assert (=> C3_VM10 (= s310 500)))
(assert (=> (not C4_VM10) (= s410 0)))
(assert (=> C4_VM10 (= s410 500)))
(assert (=> (not C5_VM10) (= s510 0)))
(assert (=> C5_VM10 (= s510 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(assert (<= (to_real (+ 0 s16 s26 s36 s46 s56)) StorageProv6))
(assert (<= (to_real (+ 0 s17 s27 s37 s47 s57)) StorageProv7))
(assert (<= (to_real (+ 0 s18 s28 s38 s48 s58)) StorageProv8))
(assert (<= (to_real (+ 0 s19 s29 s39 s49 s59)) StorageProv9))
(assert (<= (to_real (+ 0 s110 s210 s310 s410 s510)) StorageProv10))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 p16 p26 p36 p46 p56))
(minimize (+ 0 p17 p27 p37 p47 p57))
(minimize (+ 0 p18 p28 p38 p48 p58))
(minimize (+ 0 p19 p29 p39 p49 p59))
(minimize (+ 0 p110 p210 p310 p410 p510))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 m16 m26 m36 m46 m56))
(minimize (+ 0 m17 m27 m37 m47 m57))
(minimize (+ 0 m18 m28 m38 m48 m58))
(minimize (+ 0 m19 m29 m39 m49 m59))
(minimize (+ 0 m110 m210 m310 m410 m510))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0 s16 s26 s36 s46 s56))
(minimize (+ 0 s17 s27 s37 s47 s57))
(minimize (+ 0 s18 s28 s38 s48 s58))
(minimize (+ 0 s19 s29 s39 s49 s59))
(minimize (+ 0 s110 s210 s310 s410 s510))
(minimize (+ 0.0
   PriceProv1
   PriceProv2
   PriceProv3
   PriceProv4
   PriceProv5
   PriceProv6
   PriceProv7
   PriceProv8
   PriceProv9
   PriceProv10))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun VM6Type () Real)
(declare-fun VM7Type () Real)
(declare-fun VM8Type () Real)
(declare-fun VM9Type () Real)
(declare-fun VM10Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun PriceProv6 () Real)
(declare-fun C5_VM6 () Bool)
(declare-fun C4_VM6 () Bool)
(declare-fun C3_VM6 () Bool)
(declare-fun C2_VM6 () Bool)
(declare-fun C1_VM6 () Bool)
(declare-fun PriceProv7 () Real)
(declare-fun C5_VM7 () Bool)
(declare-fun C4_VM7 () Bool)
(declare-fun C3_VM7 () Bool)
(declare-fun C2_VM7 () Bool)
(declare-fun C1_VM7 () Bool)
(declare-fun PriceProv8 () Real)
(declare-fun C5_VM8 () Bool)
(declare-fun C4_VM8 () Bool)
(declare-fun C3_VM8 () Bool)
(declare-fun C2_VM8 () Bool)
(declare-fun C1_VM8 () Bool)
(declare-fun PriceProv9 () Real)
(declare-fun C5_VM9 () Bool)
(declare-fun C4_VM9 () Bool)
(declare-fun C3_VM9 () Bool)
(declare-fun C2_VM9 () Bool)
(declare-fun C1_VM9 () Bool)
(declare-fun PriceProv10 () Real)
(declare-fun C5_VM10 () Bool)
(declare-fun C4_VM10 () Bool)
(declare-fun C3_VM10 () Bool)
(declare-fun C2_VM10 () Bool)
(declare-fun C1_VM10 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun StorageProv6 () Real)
(declare-fun MemProv6 () Real)
(declare-fun ProcProv6 () Real)
(declare-fun StorageProv7 () Real)
(declare-fun MemProv7 () Real)
(declare-fun ProcProv7 () Real)
(declare-fun StorageProv8 () Real)
(declare-fun MemProv8 () Real)
(declare-fun ProcProv8 () Real)
(declare-fun StorageProv9 () Real)
(declare-fun MemProv9 () Real)
(declare-fun ProcProv9 () Real)
(declare-fun StorageProv10 () Real)
(declare-fun MemProv10 () Real)
(declare-fun ProcProv10 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun p16 () Int)
(declare-fun p26 () Int)
(declare-fun p36 () Int)
(declare-fun p46 () Int)
(declare-fun p56 () Int)
(declare-fun p17 () Int)
(declare-fun p27 () Int)
(declare-fun p37 () Int)
(declare-fun p47 () Int)
(declare-fun p57 () Int)
(declare-fun p18 () Int)
(declare-fun p28 () Int)
(declare-fun p38 () Int)
(declare-fun p48 () Int)
(declare-fun p58 () Int)
(declare-fun p19 () Int)
(declare-fun p29 () Int)
(declare-fun p39 () Int)
(declare-fun p49 () Int)
(declare-fun p59 () Int)
(declare-fun p110 () Int)
(declare-fun p210 () Int)
(declare-fun p310 () Int)
(declare-fun p410 () Int)
(declare-fun p510 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun m16 () Int)
(declare-fun m26 () Int)
(declare-fun m36 () Int)
(declare-fun m46 () Int)
(declare-fun m56 () Int)
(declare-fun m17 () Int)
(declare-fun m27 () Int)
(declare-fun m37 () Int)
(declare-fun m47 () Int)
(declare-fun m57 () Int)
(declare-fun m18 () Int)
(declare-fun m28 () Int)
(declare-fun m38 () Int)
(declare-fun m48 () Int)
(declare-fun m58 () Int)
(declare-fun m19 () Int)
(declare-fun m29 () Int)
(declare-fun m39 () Int)
(declare-fun m49 () Int)
(declare-fun m59 () Int)
(declare-fun m110 () Int)
(declare-fun m210 () Int)
(declare-fun m310 () Int)
(declare-fun m410 () Int)
(declare-fun m510 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(declare-fun s16 () Int)
(declare-fun s26 () Int)
(declare-fun s36 () Int)
(declare-fun s46 () Int)
(declare-fun s56 () Int)
(declare-fun s17 () Int)
(declare-fun s27 () Int)
(declare-fun s37 () Int)
(declare-fun s47 () Int)
(declare-fun s57 () Int)
(declare-fun s18 () Int)
(declare-fun s28 () Int)
(declare-fun s38 () Int)
(declare-fun s48 () Int)
(declare-fun s58 () Int)
(declare-fun s19 () Int)
(declare-fun s29 () Int)
(declare-fun s39 () Int)
(declare-fun s49 () Int)
(declare-fun s59 () Int)
(declare-fun s110 () Int)
(declare-fun s210 () Int)
(declare-fun s310 () Int)
(declare-fun s410 () Int)
(declare-fun s510 () Int)
(assert (or (= VM1Type 1.0) (= VM1Type 2.0) (= VM1Type 3.0) (= VM1Type 4.0)))
(assert (or (= VM2Type 1.0) (= VM2Type 2.0) (= VM2Type 3.0) (= VM2Type 4.0)))
(assert (or (= VM3Type 1.0) (= VM3Type 2.0) (= VM3Type 3.0) (= VM3Type 4.0)))
(assert (or (= VM4Type 1.0) (= VM4Type 2.0) (= VM4Type 3.0) (= VM4Type 4.0)))
(assert (or (= VM5Type 1.0) (= VM5Type 2.0) (= VM5Type 3.0) (= VM5Type 4.0)))
(assert (or (= VM6Type 1.0) (= VM6Type 2.0) (= VM6Type 3.0) (= VM6Type 4.0)))
(assert (or (= VM7Type 1.0) (= VM7Type 2.0) (= VM7Type 3.0) (= VM7Type 4.0)))
(assert (or (= VM8Type 1.0) (= VM8Type 2.0) (= VM8Type 3.0) (= VM8Type 4.0)))
(assert (or (= VM9Type 1.0) (= VM9Type 2.0) (= VM9Type 3.0) (= VM9Type 4.0)))
(assert (or (= VM10Type 1.0) (= VM10Type 2.0) (= VM10Type 3.0) (= VM10Type 4.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6)
    (= PriceProv6 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7)
    (= PriceProv7 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8)
    (= PriceProv8 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9)
    (= PriceProv9 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
    (= PriceProv10 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 1.0))
    (and (= PriceProv6 8403.0)
         (= ProcProv6 64.0)
         (= MemProv6 976000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 1.0))
    (and (= PriceProv7 8403.0)
         (= ProcProv7 64.0)
         (= MemProv7 976000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 1.0))
    (and (= PriceProv8 8403.0)
         (= ProcProv8 64.0)
         (= MemProv8 976000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 1.0))
    (and (= PriceProv9 8403.0)
         (= ProcProv9 64.0)
         (= MemProv9 976000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 1.0))
    (and (= PriceProv10 8403.0)
         (= ProcProv10 64.0)
         (= MemProv10 976000.0)
         (= StorageProv10 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 2.0))
    (and (= PriceProv6 9152.0)
         (= ProcProv6 64.0)
         (= MemProv6 488000.0)
         (= StorageProv6 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 2.0))
    (and (= PriceProv7 9152.0)
         (= ProcProv7 64.0)
         (= MemProv7 488000.0)
         (= StorageProv7 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 2.0))
    (and (= PriceProv8 9152.0)
         (= ProcProv8 64.0)
         (= MemProv8 488000.0)
         (= StorageProv8 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 2.0))
    (and (= PriceProv9 9152.0)
         (= ProcProv9 64.0)
         (= MemProv9 488000.0)
         (= StorageProv9 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 2.0))
    (and (= PriceProv10 9152.0)
         (= ProcProv10 64.0)
         (= MemProv10 488000.0)
         (= StorageProv10 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 3.0))
    (and (= PriceProv6 2808.0)
         (= ProcProv6 32.0)
         (= MemProv6 60000.0)
         (= StorageProv6 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 3.0))
    (and (= PriceProv7 2808.0)
         (= ProcProv7 32.0)
         (= MemProv7 60000.0)
         (= StorageProv7 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 3.0))
    (and (= PriceProv8 2808.0)
         (= ProcProv8 32.0)
         (= MemProv8 60000.0)
         (= StorageProv8 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 3.0))
    (and (= PriceProv9 2808.0)
         (= ProcProv9 32.0)
         (= MemProv9 60000.0)
         (= StorageProv9 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 3.0))
    (and (= PriceProv10 2808.0)
         (= ProcProv10 32.0)
         (= MemProv10 60000.0)
         (= StorageProv10 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 4.0))
    (and (= PriceProv6 1600.0)
         (= ProcProv6 16.0)
         (= MemProv6 122000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 4.0))
    (and (= PriceProv7 1600.0)
         (= ProcProv7 16.0)
         (= MemProv7 122000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 4.0))
    (and (= PriceProv8 1600.0)
         (= ProcProv8 16.0)
         (= MemProv8 122000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 4.0))
    (and (= PriceProv9 1600.0)
         (= ProcProv9 16.0)
         (= MemProv9 122000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 4.0))
    (and (= PriceProv10 1600.0)
         (= ProcProv10 16.0)
         (= MemProv10 122000.0)
         (= StorageProv10 1000.0))))
(assert ((_ at-least 4)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 2)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert ((_ at-least 2)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10))
(assert ((_ pble 0 7 7 7 7 7 7 7 7 7 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-most 1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ pble 0 3 3 3 3 3 3 3 3 3 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ pble 0 2 2 2 2 2 2 2 2 2 2 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)
    ((_ at-least 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)
    ((_ at-least 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ at-most 1) C3_VM1 C1_VM1))
(assert ((_ at-most 1) C3_VM1 C2_VM1))
(assert ((_ at-most 1) C3_VM1 C5_VM1))
(assert ((_ at-most 1) C3_VM2 C1_VM2))
(assert ((_ at-most 1) C3_VM2 C2_VM2))
(assert ((_ at-most 1) C3_VM2 C5_VM2))
(assert ((_ at-most 1) C3_VM3 C1_VM3))
(assert ((_ at-most 1) C3_VM3 C2_VM3))
(assert ((_ at-most 1) C3_VM3 C5_VM3))
(assert ((_ at-most 1) C3_VM4 C1_VM4))
(assert ((_ at-most 1) C3_VM4 C2_VM4))
(assert ((_ at-most 1) C3_VM4 C5_VM4))
(assert ((_ at-most 1) C3_VM5 C1_VM5))
(assert ((_ at-most 1) C3_VM5 C2_VM5))
(assert ((_ at-most 1) C3_VM5 C5_VM5))
(assert ((_ at-most 1) C3_VM6 C1_VM6))
(assert ((_ at-most 1) C3_VM6 C2_VM6))
(assert ((_ at-most 1) C3_VM6 C5_VM6))
(assert ((_ at-most 1) C3_VM7 C1_VM7))
(assert ((_ at-most 1) C3_VM7 C2_VM7))
(assert ((_ at-most 1) C3_VM7 C5_VM7))
(assert ((_ at-most 1) C3_VM8 C1_VM8))
(assert ((_ at-most 1) C3_VM8 C2_VM8))
(assert ((_ at-most 1) C3_VM8 C5_VM8))
(assert ((_ at-most 1) C3_VM9 C1_VM9))
(assert ((_ at-most 1) C3_VM9 C2_VM9))
(assert ((_ at-most 1) C3_VM9 C5_VM9))
(assert ((_ at-most 1) C3_VM10 C1_VM10))
(assert ((_ at-most 1) C3_VM10 C2_VM10))
(assert ((_ at-most 1) C3_VM10 C5_VM10))
(assert ((_ at-most 1) C4_VM1 C1_VM1))
(assert ((_ at-most 1) C4_VM1 C2_VM1))
(assert ((_ at-most 1) C4_VM1 C5_VM1))
(assert ((_ at-most 1) C4_VM2 C1_VM2))
(assert ((_ at-most 1) C4_VM2 C2_VM2))
(assert ((_ at-most 1) C4_VM2 C5_VM2))
(assert ((_ at-most 1) C4_VM3 C1_VM3))
(assert ((_ at-most 1) C4_VM3 C2_VM3))
(assert ((_ at-most 1) C4_VM3 C5_VM3))
(assert ((_ at-most 1) C4_VM4 C1_VM4))
(assert ((_ at-most 1) C4_VM4 C2_VM4))
(assert ((_ at-most 1) C4_VM4 C5_VM4))
(assert ((_ at-most 1) C4_VM5 C1_VM5))
(assert ((_ at-most 1) C4_VM5 C2_VM5))
(assert ((_ at-most 1) C4_VM5 C5_VM5))
(assert ((_ at-most 1) C4_VM6 C1_VM6))
(assert ((_ at-most 1) C4_VM6 C2_VM6))
(assert ((_ at-most 1) C4_VM6 C5_VM6))
(assert ((_ at-most 1) C4_VM7 C1_VM7))
(assert ((_ at-most 1) C4_VM7 C2_VM7))
(assert ((_ at-most 1) C4_VM7 C5_VM7))
(assert ((_ at-most 1) C4_VM8 C1_VM8))
(assert ((_ at-most 1) C4_VM8 C2_VM8))
(assert ((_ at-most 1) C4_VM8 C5_VM8))
(assert ((_ at-most 1) C4_VM9 C1_VM9))
(assert ((_ at-most 1) C4_VM9 C2_VM9))
(assert ((_ at-most 1) C4_VM9 C5_VM9))
(assert ((_ at-most 1) C4_VM10 C1_VM10))
(assert ((_ at-most 1) C4_VM10 C2_VM10))
(assert ((_ at-most 1) C4_VM10 C5_VM10))
(assert ((_ at-most 1) C5_VM1 C2_VM1))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C2_VM2))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C2_VM3))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C2_VM4))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C2_VM5))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ at-most 1) C5_VM6 C2_VM6))
(assert ((_ at-most 1) C5_VM6 C3_VM6))
(assert ((_ at-most 1) C5_VM6 C4_VM6))
(assert ((_ at-most 1) C5_VM7 C2_VM7))
(assert ((_ at-most 1) C5_VM7 C3_VM7))
(assert ((_ at-most 1) C5_VM7 C4_VM7))
(assert ((_ at-most 1) C5_VM8 C2_VM8))
(assert ((_ at-most 1) C5_VM8 C3_VM8))
(assert ((_ at-most 1) C5_VM8 C4_VM8))
(assert ((_ at-most 1) C5_VM9 C2_VM9))
(assert ((_ at-most 1) C5_VM9 C3_VM9))
(assert ((_ at-most 1) C5_VM9 C4_VM9))
(assert ((_ at-most 1) C5_VM10 C2_VM10))
(assert ((_ at-most 1) C5_VM10 C3_VM10))
(assert ((_ at-most 1) C5_VM10 C4_VM10))
(assert ((_ at-least 1)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 1)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 2)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 4)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 2)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 4)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 2)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 4)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 2)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 4)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 2)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 4)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (=> (not C1_VM6) (= p16 0)))
(assert (=> C1_VM6 (= p16 2)))
(assert (=> (not C2_VM6) (= p26 0)))
(assert (=> C2_VM6 (= p26 2)))
(assert (=> (not C3_VM6) (= p36 0)))
(assert (=> C3_VM6 (= p36 4)))
(assert (=> (not C4_VM6) (= p46 0)))
(assert (=> C4_VM6 (= p46 4)))
(assert (=> (not C5_VM6) (= p56 0)))
(assert (=> C5_VM6 (= p56 4)))
(assert (=> (not C1_VM7) (= p17 0)))
(assert (=> C1_VM7 (= p17 2)))
(assert (=> (not C2_VM7) (= p27 0)))
(assert (=> C2_VM7 (= p27 2)))
(assert (=> (not C3_VM7) (= p37 0)))
(assert (=> C3_VM7 (= p37 4)))
(assert (=> (not C4_VM7) (= p47 0)))
(assert (=> C4_VM7 (= p47 4)))
(assert (=> (not C5_VM7) (= p57 0)))
(assert (=> C5_VM7 (= p57 4)))
(assert (=> (not C1_VM8) (= p18 0)))
(assert (=> C1_VM8 (= p18 2)))
(assert (=> (not C2_VM8) (= p28 0)))
(assert (=> C2_VM8 (= p28 2)))
(assert (=> (not C3_VM8) (= p38 0)))
(assert (=> C3_VM8 (= p38 4)))
(assert (=> (not C4_VM8) (= p48 0)))
(assert (=> C4_VM8 (= p48 4)))
(assert (=> (not C5_VM8) (= p58 0)))
(assert (=> C5_VM8 (= p58 4)))
(assert (=> (not C1_VM9) (= p19 0)))
(assert (=> C1_VM9 (= p19 2)))
(assert (=> (not C2_VM9) (= p29 0)))
(assert (=> C2_VM9 (= p29 2)))
(assert (=> (not C3_VM9) (= p39 0)))
(assert (=> C3_VM9 (= p39 4)))
(assert (=> (not C4_VM9) (= p49 0)))
(assert (=> C4_VM9 (= p49 4)))
(assert (=> (not C5_VM9) (= p59 0)))
(assert (=> C5_VM9 (= p59 4)))
(assert (=> (not C1_VM10) (= p110 0)))
(assert (=> C1_VM10 (= p110 2)))
(assert (=> (not C2_VM10) (= p210 0)))
(assert (=> C2_VM10 (= p210 2)))
(assert (=> (not C3_VM10) (= p310 0)))
(assert (=> C3_VM10 (= p310 4)))
(assert (=> (not C4_VM10) (= p410 0)))
(assert (=> C4_VM10 (= p410 4)))
(assert (=> (not C5_VM10) (= p510 0)))
(assert (=> C5_VM10 (= p510 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (<= (to_real (+ 0 p16 p26 p36 p46 p56)) ProcProv6))
(assert (<= (to_real (+ 0 p17 p27 p37 p47 p57)) ProcProv7))
(assert (<= (to_real (+ 0 p18 p28 p38 p48 p58)) ProcProv8))
(assert (<= (to_real (+ 0 p19 p29 p39 p49 p59)) ProcProv9))
(assert (<= (to_real (+ 0 p110 p210 p310 p410 p510)) ProcProv10))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 512)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 512)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 2048)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 2048)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 4000)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 512)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 512)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 2048)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 2048)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 4000)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 512)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 512)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 2048)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 2048)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 4000)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 512)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 512)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 2048)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 2048)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 4000)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 512)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 512)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 2048)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 2048)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 4000)))
(assert (=> (not C1_VM6) (= m16 0)))
(assert (=> C1_VM6 (= m16 512)))
(assert (=> (not C2_VM6) (= m26 0)))
(assert (=> C2_VM6 (= m26 512)))
(assert (=> (not C3_VM6) (= m36 0)))
(assert (=> C3_VM6 (= m36 2048)))
(assert (=> (not C4_VM6) (= m46 0)))
(assert (=> C4_VM6 (= m46 2048)))
(assert (=> (not C5_VM6) (= m56 0)))
(assert (=> C5_VM6 (= m56 4000)))
(assert (=> (not C1_VM7) (= m17 0)))
(assert (=> C1_VM7 (= m17 512)))
(assert (=> (not C2_VM7) (= m27 0)))
(assert (=> C2_VM7 (= m27 512)))
(assert (=> (not C3_VM7) (= m37 0)))
(assert (=> C3_VM7 (= m37 2048)))
(assert (=> (not C4_VM7) (= m47 0)))
(assert (=> C4_VM7 (= m47 2048)))
(assert (=> (not C5_VM7) (= m57 0)))
(assert (=> C5_VM7 (= m57 4000)))
(assert (=> (not C1_VM8) (= m18 0)))
(assert (=> C1_VM8 (= m18 512)))
(assert (=> (not C2_VM8) (= m28 0)))
(assert (=> C2_VM8 (= m28 512)))
(assert (=> (not C3_VM8) (= m38 0)))
(assert (=> C3_VM8 (= m38 2048)))
(assert (=> (not C4_VM8) (= m48 0)))
(assert (=> C4_VM8 (= m48 2048)))
(assert (=> (not C5_VM8) (= m58 0)))
(assert (=> C5_VM8 (= m58 4000)))
(assert (=> (not C1_VM9) (= m19 0)))
(assert (=> C1_VM9 (= m19 512)))
(assert (=> (not C2_VM9) (= m29 0)))
(assert (=> C2_VM9 (= m29 512)))
(assert (=> (not C3_VM9) (= m39 0)))
(assert (=> C3_VM9 (= m39 2048)))
(assert (=> (not C4_VM9) (= m49 0)))
(assert (=> C4_VM9 (= m49 2048)))
(assert (=> (not C5_VM9) (= m59 0)))
(assert (=> C5_VM9 (= m59 4000)))
(assert (=> (not C1_VM10) (= m110 0)))
(assert (=> C1_VM10 (= m110 512)))
(assert (=> (not C2_VM10) (= m210 0)))
(assert (=> C2_VM10 (= m210 512)))
(assert (=> (not C3_VM10) (= m310 0)))
(assert (=> C3_VM10 (= m310 2048)))
(assert (=> (not C4_VM10) (= m410 0)))
(assert (=> C4_VM10 (= m410 2048)))
(assert (=> (not C5_VM10) (= m510 0)))
(assert (=> C5_VM10 (= m510 4000)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (<= (to_real (+ 0 m16 m26 m36 m46 m56)) MemProv6))
(assert (<= (to_real (+ 0 m17 m27 m37 m47 m57)) MemProv7))
(assert (<= (to_real (+ 0 m18 m28 m38 m48 m58)) MemProv8))
(assert (<= (to_real (+ 0 m19 m29 m39 m49 m59)) MemProv9))
(assert (<= (to_real (+ 0 m110 m210 m310 m410 m510)) MemProv10))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1000)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 2000)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 500)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 500)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1000)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 2000)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 500)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 500)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1000)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 2000)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 500)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 500)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1000)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 2000)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 500)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 500)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1000)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 2000)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 500)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 500)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (=> (not C1_VM6) (= s16 0)))
(assert (=> C1_VM6 (= s16 1000)))
(assert (=> (not C2_VM6) (= s26 0)))
(assert (=> C2_VM6 (= s26 2000)))
(assert (=> (not C3_VM6) (= s36 0)))
(assert (=> C3_VM6 (= s36 500)))
(assert (=> (not C4_VM6) (= s46 0)))
(assert (=> C4_VM6 (= s46 500)))
(assert (=> (not C5_VM6) (= s56 0)))
(assert (=> C5_VM6 (= s56 500)))
(assert (=> (not C1_VM7) (= s17 0)))
(assert (=> C1_VM7 (= s17 1000)))
(assert (=> (not C2_VM7) (= s27 0)))
(assert (=> C2_VM7 (= s27 2000)))
(assert (=> (not C3_VM7) (= s37 0)))
(assert (=> C3_VM7 (= s37 500)))
(assert (=> (not C4_VM7) (= s47 0)))
(assert (=> C4_VM7 (= s47 500)))
(assert (=> (not C5_VM7) (= s57 0)))
(assert (=> C5_VM7 (= s57 500)))
(assert (=> (not C1_VM8) (= s18 0)))
(assert (=> C1_VM8 (= s18 1000)))
(assert (=> (not C2_VM8) (= s28 0)))
(assert (=> C2_VM8 (= s28 2000)))
(assert (=> (not C3_VM8) (= s38 0)))
(assert (=> C3_VM8 (= s38 500)))
(assert (=> (not C4_VM8) (= s48 0)))
(assert (=> C4_VM8 (= s48 500)))
(assert (=> (not C5_VM8) (= s58 0)))
(assert (=> C5_VM8 (= s58 500)))
(assert (=> (not C1_VM9) (= s19 0)))
(assert (=> C1_VM9 (= s19 1000)))
(assert (=> (not C2_VM9) (= s29 0)))
(assert (=> C2_VM9 (= s29 2000)))
(assert (=> (not C3_VM9) (= s39 0)))
(assert (=> C3_VM9 (= s39 500)))
(assert (=> (not C4_VM9) (= s49 0)))
(assert (=> C4_VM9 (= s49 500)))
(assert (=> (not C5_VM9) (= s59 0)))
(assert (=> C5_VM9 (= s59 500)))
(assert (=> (not C1_VM10) (= s110 0)))
(assert (=> C1_VM10 (= s110 1000)))
(assert (=> (not C2_VM10) (= s210 0)))
(assert (=> C2_VM10 (= s210 2000)))
(assert (=> (not C3_VM10) (= s310 0)))
(assert (=> C3_VM10 (= s310 500)))
(assert (=> (not C4_VM10) (= s410 0)))
(assert (=> C4_VM10 (= s410 500)))
(assert (=> (not C5_VM10) (= s510 0)))
(assert (=> C5_VM10 (= s510 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(assert (<= (to_real (+ 0 s16 s26 s36 s46 s56)) StorageProv6))
(assert (<= (to_real (+ 0 s17 s27 s37 s47 s57)) StorageProv7))
(assert (<= (to_real (+ 0 s18 s28 s38 s48 s58)) StorageProv8))
(assert (<= (to_real (+ 0 s19 s29 s39 s49 s59)) StorageProv9))
(assert (<= (to_real (+ 0 s110 s210 s310 s410 s510)) StorageProv10))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 p16 p26 p36 p46 p56))
(minimize (+ 0 p17 p27 p37 p47 p57))
(minimize (+ 0 p18 p28 p38 p48 p58))
(minimize (+ 0 p19 p29 p39 p49 p59))
(minimize (+ 0 p110 p210 p310 p410 p510))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 m16 m26 m36 m46 m56))
(minimize (+ 0 m17 m27 m37 m47 m57))
(minimize (+ 0 m18 m28 m38 m48 m58))
(minimize (+ 0 m19 m29 m39 m49 m59))
(minimize (+ 0 m110 m210 m310 m410 m510))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0 s16 s26 s36 s46 s56))
(minimize (+ 0 s17 s27 s37 s47 s57))
(minimize (+ 0 s18 s28 s38 s48 s58))
(minimize (+ 0 s19 s29 s39 s49 s59))
(minimize (+ 0 s110 s210 s310 s410 s510))
(minimize (+ 0.0
   PriceProv1
   PriceProv2
   PriceProv3
   PriceProv4
   PriceProv5
   PriceProv6
   PriceProv7
   PriceProv8
   PriceProv9
   PriceProv10))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun VM6Type () Real)
(declare-fun VM7Type () Real)
(declare-fun VM8Type () Real)
(declare-fun VM9Type () Real)
(declare-fun VM10Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun PriceProv6 () Real)
(declare-fun C5_VM6 () Bool)
(declare-fun C4_VM6 () Bool)
(declare-fun C3_VM6 () Bool)
(declare-fun C2_VM6 () Bool)
(declare-fun C1_VM6 () Bool)
(declare-fun PriceProv7 () Real)
(declare-fun C5_VM7 () Bool)
(declare-fun C4_VM7 () Bool)
(declare-fun C3_VM7 () Bool)
(declare-fun C2_VM7 () Bool)
(declare-fun C1_VM7 () Bool)
(declare-fun PriceProv8 () Real)
(declare-fun C5_VM8 () Bool)
(declare-fun C4_VM8 () Bool)
(declare-fun C3_VM8 () Bool)
(declare-fun C2_VM8 () Bool)
(declare-fun C1_VM8 () Bool)
(declare-fun PriceProv9 () Real)
(declare-fun C5_VM9 () Bool)
(declare-fun C4_VM9 () Bool)
(declare-fun C3_VM9 () Bool)
(declare-fun C2_VM9 () Bool)
(declare-fun C1_VM9 () Bool)
(declare-fun PriceProv10 () Real)
(declare-fun C5_VM10 () Bool)
(declare-fun C4_VM10 () Bool)
(declare-fun C3_VM10 () Bool)
(declare-fun C2_VM10 () Bool)
(declare-fun C1_VM10 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun StorageProv6 () Real)
(declare-fun MemProv6 () Real)
(declare-fun ProcProv6 () Real)
(declare-fun StorageProv7 () Real)
(declare-fun MemProv7 () Real)
(declare-fun ProcProv7 () Real)
(declare-fun StorageProv8 () Real)
(declare-fun MemProv8 () Real)
(declare-fun ProcProv8 () Real)
(declare-fun StorageProv9 () Real)
(declare-fun MemProv9 () Real)
(declare-fun ProcProv9 () Real)
(declare-fun StorageProv10 () Real)
(declare-fun MemProv10 () Real)
(declare-fun ProcProv10 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun p16 () Int)
(declare-fun p26 () Int)
(declare-fun p36 () Int)
(declare-fun p46 () Int)
(declare-fun p56 () Int)
(declare-fun p17 () Int)
(declare-fun p27 () Int)
(declare-fun p37 () Int)
(declare-fun p47 () Int)
(declare-fun p57 () Int)
(declare-fun p18 () Int)
(declare-fun p28 () Int)
(declare-fun p38 () Int)
(declare-fun p48 () Int)
(declare-fun p58 () Int)
(declare-fun p19 () Int)
(declare-fun p29 () Int)
(declare-fun p39 () Int)
(declare-fun p49 () Int)
(declare-fun p59 () Int)
(declare-fun p110 () Int)
(declare-fun p210 () Int)
(declare-fun p310 () Int)
(declare-fun p410 () Int)
(declare-fun p510 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun m16 () Int)
(declare-fun m26 () Int)
(declare-fun m36 () Int)
(declare-fun m46 () Int)
(declare-fun m56 () Int)
(declare-fun m17 () Int)
(declare-fun m27 () Int)
(declare-fun m37 () Int)
(declare-fun m47 () Int)
(declare-fun m57 () Int)
(declare-fun m18 () Int)
(declare-fun m28 () Int)
(declare-fun m38 () Int)
(declare-fun m48 () Int)
(declare-fun m58 () Int)
(declare-fun m19 () Int)
(declare-fun m29 () Int)
(declare-fun m39 () Int)
(declare-fun m49 () Int)
(declare-fun m59 () Int)
(declare-fun m110 () Int)
(declare-fun m210 () Int)
(declare-fun m310 () Int)
(declare-fun m410 () Int)
(declare-fun m510 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(declare-fun s16 () Int)
(declare-fun s26 () Int)
(declare-fun s36 () Int)
(declare-fun s46 () Int)
(declare-fun s56 () Int)
(declare-fun s17 () Int)
(declare-fun s27 () Int)
(declare-fun s37 () Int)
(declare-fun s47 () Int)
(declare-fun s57 () Int)
(declare-fun s18 () Int)
(declare-fun s28 () Int)
(declare-fun s38 () Int)
(declare-fun s48 () Int)
(declare-fun s58 () Int)
(declare-fun s19 () Int)
(declare-fun s29 () Int)
(declare-fun s39 () Int)
(declare-fun s49 () Int)
(declare-fun s59 () Int)
(declare-fun s110 () Int)
(declare-fun s210 () Int)
(declare-fun s310 () Int)
(declare-fun s410 () Int)
(declare-fun s510 () Int)
(assert (or (= VM1Type 1.0) (= VM1Type 2.0) (= VM1Type 3.0) (= VM1Type 4.0)))
(assert (or (= VM2Type 1.0) (= VM2Type 2.0) (= VM2Type 3.0) (= VM2Type 4.0)))
(assert (or (= VM3Type 1.0) (= VM3Type 2.0) (= VM3Type 3.0) (= VM3Type 4.0)))
(assert (or (= VM4Type 1.0) (= VM4Type 2.0) (= VM4Type 3.0) (= VM4Type 4.0)))
(assert (or (= VM5Type 1.0) (= VM5Type 2.0) (= VM5Type 3.0) (= VM5Type 4.0)))
(assert (or (= VM6Type 1.0) (= VM6Type 2.0) (= VM6Type 3.0) (= VM6Type 4.0)))
(assert (or (= VM7Type 1.0) (= VM7Type 2.0) (= VM7Type 3.0) (= VM7Type 4.0)))
(assert (or (= VM8Type 1.0) (= VM8Type 2.0) (= VM8Type 3.0) (= VM8Type 4.0)))
(assert (or (= VM9Type 1.0) (= VM9Type 2.0) (= VM9Type 3.0) (= VM9Type 4.0)))
(assert (or (= VM10Type 1.0) (= VM10Type 2.0) (= VM10Type 3.0) (= VM10Type 4.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6)
    (= PriceProv6 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7)
    (= PriceProv7 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8)
    (= PriceProv8 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9)
    (= PriceProv9 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
    (= PriceProv10 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 1.0))
    (and (= PriceProv6 8403.0)
         (= ProcProv6 64.0)
         (= MemProv6 976000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 1.0))
    (and (= PriceProv7 8403.0)
         (= ProcProv7 64.0)
         (= MemProv7 976000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 1.0))
    (and (= PriceProv8 8403.0)
         (= ProcProv8 64.0)
         (= MemProv8 976000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 1.0))
    (and (= PriceProv9 8403.0)
         (= ProcProv9 64.0)
         (= MemProv9 976000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 1.0))
    (and (= PriceProv10 8403.0)
         (= ProcProv10 64.0)
         (= MemProv10 976000.0)
         (= StorageProv10 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 2.0))
    (and (= PriceProv6 9152.0)
         (= ProcProv6 64.0)
         (= MemProv6 488000.0)
         (= StorageProv6 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 2.0))
    (and (= PriceProv7 9152.0)
         (= ProcProv7 64.0)
         (= MemProv7 488000.0)
         (= StorageProv7 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 2.0))
    (and (= PriceProv8 9152.0)
         (= ProcProv8 64.0)
         (= MemProv8 488000.0)
         (= StorageProv8 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 2.0))
    (and (= PriceProv9 9152.0)
         (= ProcProv9 64.0)
         (= MemProv9 488000.0)
         (= StorageProv9 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 2.0))
    (and (= PriceProv10 9152.0)
         (= ProcProv10 64.0)
         (= MemProv10 488000.0)
         (= StorageProv10 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 3.0))
    (and (= PriceProv6 2808.0)
         (= ProcProv6 32.0)
         (= MemProv6 60000.0)
         (= StorageProv6 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 3.0))
    (and (= PriceProv7 2808.0)
         (= ProcProv7 32.0)
         (= MemProv7 60000.0)
         (= StorageProv7 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 3.0))
    (and (= PriceProv8 2808.0)
         (= ProcProv8 32.0)
         (= MemProv8 60000.0)
         (= StorageProv8 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 3.0))
    (and (= PriceProv9 2808.0)
         (= ProcProv9 32.0)
         (= MemProv9 60000.0)
         (= StorageProv9 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 3.0))
    (and (= PriceProv10 2808.0)
         (= ProcProv10 32.0)
         (= MemProv10 60000.0)
         (= StorageProv10 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 4.0))
    (and (= PriceProv6 1600.0)
         (= ProcProv6 16.0)
         (= MemProv6 122000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 4.0))
    (and (= PriceProv7 1600.0)
         (= ProcProv7 16.0)
         (= MemProv7 122000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 4.0))
    (and (= PriceProv8 1600.0)
         (= ProcProv8 16.0)
         (= MemProv8 122000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 4.0))
    (and (= PriceProv9 1600.0)
         (= ProcProv9 16.0)
         (= MemProv9 122000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 4.0))
    (and (= PriceProv10 1600.0)
         (= ProcProv10 16.0)
         (= MemProv10 122000.0)
         (= StorageProv10 1000.0))))
(assert ((_ at-least 4)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 2)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert ((_ at-least 2)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10))
(assert ((_ pble 0 7 7 7 7 7 7 7 7 7 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-most 1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ pble 0 3 3 3 3 3 3 3 3 3 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ pble 0 2 2 2 2 2 2 2 2 2 2 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)
    ((_ at-least 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)
    ((_ at-least 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ at-most 1) C3_VM1 C1_VM1))
(assert ((_ at-most 1) C3_VM1 C2_VM1))
(assert ((_ at-most 1) C3_VM1 C5_VM1))
(assert ((_ at-most 1) C3_VM2 C1_VM2))
(assert ((_ at-most 1) C3_VM2 C2_VM2))
(assert ((_ at-most 1) C3_VM2 C5_VM2))
(assert ((_ at-most 1) C3_VM3 C1_VM3))
(assert ((_ at-most 1) C3_VM3 C2_VM3))
(assert ((_ at-most 1) C3_VM3 C5_VM3))
(assert ((_ at-most 1) C3_VM4 C1_VM4))
(assert ((_ at-most 1) C3_VM4 C2_VM4))
(assert ((_ at-most 1) C3_VM4 C5_VM4))
(assert ((_ at-most 1) C3_VM5 C1_VM5))
(assert ((_ at-most 1) C3_VM5 C2_VM5))
(assert ((_ at-most 1) C3_VM5 C5_VM5))
(assert ((_ at-most 1) C3_VM6 C1_VM6))
(assert ((_ at-most 1) C3_VM6 C2_VM6))
(assert ((_ at-most 1) C3_VM6 C5_VM6))
(assert ((_ at-most 1) C3_VM7 C1_VM7))
(assert ((_ at-most 1) C3_VM7 C2_VM7))
(assert ((_ at-most 1) C3_VM7 C5_VM7))
(assert ((_ at-most 1) C3_VM8 C1_VM8))
(assert ((_ at-most 1) C3_VM8 C2_VM8))
(assert ((_ at-most 1) C3_VM8 C5_VM8))
(assert ((_ at-most 1) C3_VM9 C1_VM9))
(assert ((_ at-most 1) C3_VM9 C2_VM9))
(assert ((_ at-most 1) C3_VM9 C5_VM9))
(assert ((_ at-most 1) C3_VM10 C1_VM10))
(assert ((_ at-most 1) C3_VM10 C2_VM10))
(assert ((_ at-most 1) C3_VM10 C5_VM10))
(assert ((_ at-most 1) C4_VM1 C1_VM1))
(assert ((_ at-most 1) C4_VM1 C2_VM1))
(assert ((_ at-most 1) C4_VM1 C5_VM1))
(assert ((_ at-most 1) C4_VM2 C1_VM2))
(assert ((_ at-most 1) C4_VM2 C2_VM2))
(assert ((_ at-most 1) C4_VM2 C5_VM2))
(assert ((_ at-most 1) C4_VM3 C1_VM3))
(assert ((_ at-most 1) C4_VM3 C2_VM3))
(assert ((_ at-most 1) C4_VM3 C5_VM3))
(assert ((_ at-most 1) C4_VM4 C1_VM4))
(assert ((_ at-most 1) C4_VM4 C2_VM4))
(assert ((_ at-most 1) C4_VM4 C5_VM4))
(assert ((_ at-most 1) C4_VM5 C1_VM5))
(assert ((_ at-most 1) C4_VM5 C2_VM5))
(assert ((_ at-most 1) C4_VM5 C5_VM5))
(assert ((_ at-most 1) C4_VM6 C1_VM6))
(assert ((_ at-most 1) C4_VM6 C2_VM6))
(assert ((_ at-most 1) C4_VM6 C5_VM6))
(assert ((_ at-most 1) C4_VM7 C1_VM7))
(assert ((_ at-most 1) C4_VM7 C2_VM7))
(assert ((_ at-most 1) C4_VM7 C5_VM7))
(assert ((_ at-most 1) C4_VM8 C1_VM8))
(assert ((_ at-most 1) C4_VM8 C2_VM8))
(assert ((_ at-most 1) C4_VM8 C5_VM8))
(assert ((_ at-most 1) C4_VM9 C1_VM9))
(assert ((_ at-most 1) C4_VM9 C2_VM9))
(assert ((_ at-most 1) C4_VM9 C5_VM9))
(assert ((_ at-most 1) C4_VM10 C1_VM10))
(assert ((_ at-most 1) C4_VM10 C2_VM10))
(assert ((_ at-most 1) C4_VM10 C5_VM10))
(assert ((_ at-most 1) C5_VM1 C2_VM1))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C2_VM2))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C2_VM3))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C2_VM4))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C2_VM5))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ at-most 1) C5_VM6 C2_VM6))
(assert ((_ at-most 1) C5_VM6 C3_VM6))
(assert ((_ at-most 1) C5_VM6 C4_VM6))
(assert ((_ at-most 1) C5_VM7 C2_VM7))
(assert ((_ at-most 1) C5_VM7 C3_VM7))
(assert ((_ at-most 1) C5_VM7 C4_VM7))
(assert ((_ at-most 1) C5_VM8 C2_VM8))
(assert ((_ at-most 1) C5_VM8 C3_VM8))
(assert ((_ at-most 1) C5_VM8 C4_VM8))
(assert ((_ at-most 1) C5_VM9 C2_VM9))
(assert ((_ at-most 1) C5_VM9 C3_VM9))
(assert ((_ at-most 1) C5_VM9 C4_VM9))
(assert ((_ at-most 1) C5_VM10 C2_VM10))
(assert ((_ at-most 1) C5_VM10 C3_VM10))
(assert ((_ at-most 1) C5_VM10 C4_VM10))
(assert ((_ at-least 1)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 1)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 2)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 4)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 2)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 4)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 2)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 4)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 2)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 4)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 2)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 4)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (=> (not C1_VM6) (= p16 0)))
(assert (=> C1_VM6 (= p16 2)))
(assert (=> (not C2_VM6) (= p26 0)))
(assert (=> C2_VM6 (= p26 2)))
(assert (=> (not C3_VM6) (= p36 0)))
(assert (=> C3_VM6 (= p36 4)))
(assert (=> (not C4_VM6) (= p46 0)))
(assert (=> C4_VM6 (= p46 4)))
(assert (=> (not C5_VM6) (= p56 0)))
(assert (=> C5_VM6 (= p56 4)))
(assert (=> (not C1_VM7) (= p17 0)))
(assert (=> C1_VM7 (= p17 2)))
(assert (=> (not C2_VM7) (= p27 0)))
(assert (=> C2_VM7 (= p27 2)))
(assert (=> (not C3_VM7) (= p37 0)))
(assert (=> C3_VM7 (= p37 4)))
(assert (=> (not C4_VM7) (= p47 0)))
(assert (=> C4_VM7 (= p47 4)))
(assert (=> (not C5_VM7) (= p57 0)))
(assert (=> C5_VM7 (= p57 4)))
(assert (=> (not C1_VM8) (= p18 0)))
(assert (=> C1_VM8 (= p18 2)))
(assert (=> (not C2_VM8) (= p28 0)))
(assert (=> C2_VM8 (= p28 2)))
(assert (=> (not C3_VM8) (= p38 0)))
(assert (=> C3_VM8 (= p38 4)))
(assert (=> (not C4_VM8) (= p48 0)))
(assert (=> C4_VM8 (= p48 4)))
(assert (=> (not C5_VM8) (= p58 0)))
(assert (=> C5_VM8 (= p58 4)))
(assert (=> (not C1_VM9) (= p19 0)))
(assert (=> C1_VM9 (= p19 2)))
(assert (=> (not C2_VM9) (= p29 0)))
(assert (=> C2_VM9 (= p29 2)))
(assert (=> (not C3_VM9) (= p39 0)))
(assert (=> C3_VM9 (= p39 4)))
(assert (=> (not C4_VM9) (= p49 0)))
(assert (=> C4_VM9 (= p49 4)))
(assert (=> (not C5_VM9) (= p59 0)))
(assert (=> C5_VM9 (= p59 4)))
(assert (=> (not C1_VM10) (= p110 0)))
(assert (=> C1_VM10 (= p110 2)))
(assert (=> (not C2_VM10) (= p210 0)))
(assert (=> C2_VM10 (= p210 2)))
(assert (=> (not C3_VM10) (= p310 0)))
(assert (=> C3_VM10 (= p310 4)))
(assert (=> (not C4_VM10) (= p410 0)))
(assert (=> C4_VM10 (= p410 4)))
(assert (=> (not C5_VM10) (= p510 0)))
(assert (=> C5_VM10 (= p510 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (<= (to_real (+ 0 p16 p26 p36 p46 p56)) ProcProv6))
(assert (<= (to_real (+ 0 p17 p27 p37 p47 p57)) ProcProv7))
(assert (<= (to_real (+ 0 p18 p28 p38 p48 p58)) ProcProv8))
(assert (<= (to_real (+ 0 p19 p29 p39 p49 p59)) ProcProv9))
(assert (<= (to_real (+ 0 p110 p210 p310 p410 p510)) ProcProv10))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 512)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 512)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 2048)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 2048)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 4000)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 512)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 512)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 2048)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 2048)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 4000)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 512)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 512)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 2048)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 2048)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 4000)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 512)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 512)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 2048)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 2048)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 4000)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 512)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 512)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 2048)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 2048)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 4000)))
(assert (=> (not C1_VM6) (= m16 0)))
(assert (=> C1_VM6 (= m16 512)))
(assert (=> (not C2_VM6) (= m26 0)))
(assert (=> C2_VM6 (= m26 512)))
(assert (=> (not C3_VM6) (= m36 0)))
(assert (=> C3_VM6 (= m36 2048)))
(assert (=> (not C4_VM6) (= m46 0)))
(assert (=> C4_VM6 (= m46 2048)))
(assert (=> (not C5_VM6) (= m56 0)))
(assert (=> C5_VM6 (= m56 4000)))
(assert (=> (not C1_VM7) (= m17 0)))
(assert (=> C1_VM7 (= m17 512)))
(assert (=> (not C2_VM7) (= m27 0)))
(assert (=> C2_VM7 (= m27 512)))
(assert (=> (not C3_VM7) (= m37 0)))
(assert (=> C3_VM7 (= m37 2048)))
(assert (=> (not C4_VM7) (= m47 0)))
(assert (=> C4_VM7 (= m47 2048)))
(assert (=> (not C5_VM7) (= m57 0)))
(assert (=> C5_VM7 (= m57 4000)))
(assert (=> (not C1_VM8) (= m18 0)))
(assert (=> C1_VM8 (= m18 512)))
(assert (=> (not C2_VM8) (= m28 0)))
(assert (=> C2_VM8 (= m28 512)))
(assert (=> (not C3_VM8) (= m38 0)))
(assert (=> C3_VM8 (= m38 2048)))
(assert (=> (not C4_VM8) (= m48 0)))
(assert (=> C4_VM8 (= m48 2048)))
(assert (=> (not C5_VM8) (= m58 0)))
(assert (=> C5_VM8 (= m58 4000)))
(assert (=> (not C1_VM9) (= m19 0)))
(assert (=> C1_VM9 (= m19 512)))
(assert (=> (not C2_VM9) (= m29 0)))
(assert (=> C2_VM9 (= m29 512)))
(assert (=> (not C3_VM9) (= m39 0)))
(assert (=> C3_VM9 (= m39 2048)))
(assert (=> (not C4_VM9) (= m49 0)))
(assert (=> C4_VM9 (= m49 2048)))
(assert (=> (not C5_VM9) (= m59 0)))
(assert (=> C5_VM9 (= m59 4000)))
(assert (=> (not C1_VM10) (= m110 0)))
(assert (=> C1_VM10 (= m110 512)))
(assert (=> (not C2_VM10) (= m210 0)))
(assert (=> C2_VM10 (= m210 512)))
(assert (=> (not C3_VM10) (= m310 0)))
(assert (=> C3_VM10 (= m310 2048)))
(assert (=> (not C4_VM10) (= m410 0)))
(assert (=> C4_VM10 (= m410 2048)))
(assert (=> (not C5_VM10) (= m510 0)))
(assert (=> C5_VM10 (= m510 4000)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (<= (to_real (+ 0 m16 m26 m36 m46 m56)) MemProv6))
(assert (<= (to_real (+ 0 m17 m27 m37 m47 m57)) MemProv7))
(assert (<= (to_real (+ 0 m18 m28 m38 m48 m58)) MemProv8))
(assert (<= (to_real (+ 0 m19 m29 m39 m49 m59)) MemProv9))
(assert (<= (to_real (+ 0 m110 m210 m310 m410 m510)) MemProv10))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1000)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 2000)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 500)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 500)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1000)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 2000)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 500)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 500)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1000)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 2000)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 500)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 500)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1000)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 2000)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 500)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 500)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1000)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 2000)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 500)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 500)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (=> (not C1_VM6) (= s16 0)))
(assert (=> C1_VM6 (= s16 1000)))
(assert (=> (not C2_VM6) (= s26 0)))
(assert (=> C2_VM6 (= s26 2000)))
(assert (=> (not C3_VM6) (= s36 0)))
(assert (=> C3_VM6 (= s36 500)))
(assert (=> (not C4_VM6) (= s46 0)))
(assert (=> C4_VM6 (= s46 500)))
(assert (=> (not C5_VM6) (= s56 0)))
(assert (=> C5_VM6 (= s56 500)))
(assert (=> (not C1_VM7) (= s17 0)))
(assert (=> C1_VM7 (= s17 1000)))
(assert (=> (not C2_VM7) (= s27 0)))
(assert (=> C2_VM7 (= s27 2000)))
(assert (=> (not C3_VM7) (= s37 0)))
(assert (=> C3_VM7 (= s37 500)))
(assert (=> (not C4_VM7) (= s47 0)))
(assert (=> C4_VM7 (= s47 500)))
(assert (=> (not C5_VM7) (= s57 0)))
(assert (=> C5_VM7 (= s57 500)))
(assert (=> (not C1_VM8) (= s18 0)))
(assert (=> C1_VM8 (= s18 1000)))
(assert (=> (not C2_VM8) (= s28 0)))
(assert (=> C2_VM8 (= s28 2000)))
(assert (=> (not C3_VM8) (= s38 0)))
(assert (=> C3_VM8 (= s38 500)))
(assert (=> (not C4_VM8) (= s48 0)))
(assert (=> C4_VM8 (= s48 500)))
(assert (=> (not C5_VM8) (= s58 0)))
(assert (=> C5_VM8 (= s58 500)))
(assert (=> (not C1_VM9) (= s19 0)))
(assert (=> C1_VM9 (= s19 1000)))
(assert (=> (not C2_VM9) (= s29 0)))
(assert (=> C2_VM9 (= s29 2000)))
(assert (=> (not C3_VM9) (= s39 0)))
(assert (=> C3_VM9 (= s39 500)))
(assert (=> (not C4_VM9) (= s49 0)))
(assert (=> C4_VM9 (= s49 500)))
(assert (=> (not C5_VM9) (= s59 0)))
(assert (=> C5_VM9 (= s59 500)))
(assert (=> (not C1_VM10) (= s110 0)))
(assert (=> C1_VM10 (= s110 1000)))
(assert (=> (not C2_VM10) (= s210 0)))
(assert (=> C2_VM10 (= s210 2000)))
(assert (=> (not C3_VM10) (= s310 0)))
(assert (=> C3_VM10 (= s310 500)))
(assert (=> (not C4_VM10) (= s410 0)))
(assert (=> C4_VM10 (= s410 500)))
(assert (=> (not C5_VM10) (= s510 0)))
(assert (=> C5_VM10 (= s510 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(assert (<= (to_real (+ 0 s16 s26 s36 s46 s56)) StorageProv6))
(assert (<= (to_real (+ 0 s17 s27 s37 s47 s57)) StorageProv7))
(assert (<= (to_real (+ 0 s18 s28 s38 s48 s58)) StorageProv8))
(assert (<= (to_real (+ 0 s19 s29 s39 s49 s59)) StorageProv9))
(assert (<= (to_real (+ 0 s110 s210 s310 s410 s510)) StorageProv10))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 p16 p26 p36 p46 p56))
(minimize (+ 0 p17 p27 p37 p47 p57))
(minimize (+ 0 p18 p28 p38 p48 p58))
(minimize (+ 0 p19 p29 p39 p49 p59))
(minimize (+ 0 p110 p210 p310 p410 p510))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 m16 m26 m36 m46 m56))
(minimize (+ 0 m17 m27 m37 m47 m57))
(minimize (+ 0 m18 m28 m38 m48 m58))
(minimize (+ 0 m19 m29 m39 m49 m59))
(minimize (+ 0 m110 m210 m310 m410 m510))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0 s16 s26 s36 s46 s56))
(minimize (+ 0 s17 s27 s37 s47 s57))
(minimize (+ 0 s18 s28 s38 s48 s58))
(minimize (+ 0 s19 s29 s39 s49 s59))
(minimize (+ 0 s110 s210 s310 s410 s510))
(minimize (+ 0.0
   PriceProv1
   PriceProv2
   PriceProv3
   PriceProv4
   PriceProv5
   PriceProv6
   PriceProv7
   PriceProv8
   PriceProv9
   PriceProv10))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun VM6Type () Real)
(declare-fun VM7Type () Real)
(declare-fun VM8Type () Real)
(declare-fun VM9Type () Real)
(declare-fun VM10Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun PriceProv6 () Real)
(declare-fun C5_VM6 () Bool)
(declare-fun C4_VM6 () Bool)
(declare-fun C3_VM6 () Bool)
(declare-fun C2_VM6 () Bool)
(declare-fun C1_VM6 () Bool)
(declare-fun PriceProv7 () Real)
(declare-fun C5_VM7 () Bool)
(declare-fun C4_VM7 () Bool)
(declare-fun C3_VM7 () Bool)
(declare-fun C2_VM7 () Bool)
(declare-fun C1_VM7 () Bool)
(declare-fun PriceProv8 () Real)
(declare-fun C5_VM8 () Bool)
(declare-fun C4_VM8 () Bool)
(declare-fun C3_VM8 () Bool)
(declare-fun C2_VM8 () Bool)
(declare-fun C1_VM8 () Bool)
(declare-fun PriceProv9 () Real)
(declare-fun C5_VM9 () Bool)
(declare-fun C4_VM9 () Bool)
(declare-fun C3_VM9 () Bool)
(declare-fun C2_VM9 () Bool)
(declare-fun C1_VM9 () Bool)
(declare-fun PriceProv10 () Real)
(declare-fun C5_VM10 () Bool)
(declare-fun C4_VM10 () Bool)
(declare-fun C3_VM10 () Bool)
(declare-fun C2_VM10 () Bool)
(declare-fun C1_VM10 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun StorageProv6 () Real)
(declare-fun MemProv6 () Real)
(declare-fun ProcProv6 () Real)
(declare-fun StorageProv7 () Real)
(declare-fun MemProv7 () Real)
(declare-fun ProcProv7 () Real)
(declare-fun StorageProv8 () Real)
(declare-fun MemProv8 () Real)
(declare-fun ProcProv8 () Real)
(declare-fun StorageProv9 () Real)
(declare-fun MemProv9 () Real)
(declare-fun ProcProv9 () Real)
(declare-fun StorageProv10 () Real)
(declare-fun MemProv10 () Real)
(declare-fun ProcProv10 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun p16 () Int)
(declare-fun p26 () Int)
(declare-fun p36 () Int)
(declare-fun p46 () Int)
(declare-fun p56 () Int)
(declare-fun p17 () Int)
(declare-fun p27 () Int)
(declare-fun p37 () Int)
(declare-fun p47 () Int)
(declare-fun p57 () Int)
(declare-fun p18 () Int)
(declare-fun p28 () Int)
(declare-fun p38 () Int)
(declare-fun p48 () Int)
(declare-fun p58 () Int)
(declare-fun p19 () Int)
(declare-fun p29 () Int)
(declare-fun p39 () Int)
(declare-fun p49 () Int)
(declare-fun p59 () Int)
(declare-fun p110 () Int)
(declare-fun p210 () Int)
(declare-fun p310 () Int)
(declare-fun p410 () Int)
(declare-fun p510 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun m16 () Int)
(declare-fun m26 () Int)
(declare-fun m36 () Int)
(declare-fun m46 () Int)
(declare-fun m56 () Int)
(declare-fun m17 () Int)
(declare-fun m27 () Int)
(declare-fun m37 () Int)
(declare-fun m47 () Int)
(declare-fun m57 () Int)
(declare-fun m18 () Int)
(declare-fun m28 () Int)
(declare-fun m38 () Int)
(declare-fun m48 () Int)
(declare-fun m58 () Int)
(declare-fun m19 () Int)
(declare-fun m29 () Int)
(declare-fun m39 () Int)
(declare-fun m49 () Int)
(declare-fun m59 () Int)
(declare-fun m110 () Int)
(declare-fun m210 () Int)
(declare-fun m310 () Int)
(declare-fun m410 () Int)
(declare-fun m510 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(declare-fun s16 () Int)
(declare-fun s26 () Int)
(declare-fun s36 () Int)
(declare-fun s46 () Int)
(declare-fun s56 () Int)
(declare-fun s17 () Int)
(declare-fun s27 () Int)
(declare-fun s37 () Int)
(declare-fun s47 () Int)
(declare-fun s57 () Int)
(declare-fun s18 () Int)
(declare-fun s28 () Int)
(declare-fun s38 () Int)
(declare-fun s48 () Int)
(declare-fun s58 () Int)
(declare-fun s19 () Int)
(declare-fun s29 () Int)
(declare-fun s39 () Int)
(declare-fun s49 () Int)
(declare-fun s59 () Int)
(declare-fun s110 () Int)
(declare-fun s210 () Int)
(declare-fun s310 () Int)
(declare-fun s410 () Int)
(declare-fun s510 () Int)
(assert (or (= VM1Type 1.0) (= VM1Type 2.0) (= VM1Type 3.0) (= VM1Type 4.0)))
(assert (or (= VM2Type 1.0) (= VM2Type 2.0) (= VM2Type 3.0) (= VM2Type 4.0)))
(assert (or (= VM3Type 1.0) (= VM3Type 2.0) (= VM3Type 3.0) (= VM3Type 4.0)))
(assert (or (= VM4Type 1.0) (= VM4Type 2.0) (= VM4Type 3.0) (= VM4Type 4.0)))
(assert (or (= VM5Type 1.0) (= VM5Type 2.0) (= VM5Type 3.0) (= VM5Type 4.0)))
(assert (or (= VM6Type 1.0) (= VM6Type 2.0) (= VM6Type 3.0) (= VM6Type 4.0)))
(assert (or (= VM7Type 1.0) (= VM7Type 2.0) (= VM7Type 3.0) (= VM7Type 4.0)))
(assert (or (= VM8Type 1.0) (= VM8Type 2.0) (= VM8Type 3.0) (= VM8Type 4.0)))
(assert (or (= VM9Type 1.0) (= VM9Type 2.0) (= VM9Type 3.0) (= VM9Type 4.0)))
(assert (or (= VM10Type 1.0) (= VM10Type 2.0) (= VM10Type 3.0) (= VM10Type 4.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6)
    (= PriceProv6 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7)
    (= PriceProv7 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8)
    (= PriceProv8 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9)
    (= PriceProv9 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
    (= PriceProv10 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 1.0))
    (and (= PriceProv6 8403.0)
         (= ProcProv6 64.0)
         (= MemProv6 976000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 1.0))
    (and (= PriceProv7 8403.0)
         (= ProcProv7 64.0)
         (= MemProv7 976000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 1.0))
    (and (= PriceProv8 8403.0)
         (= ProcProv8 64.0)
         (= MemProv8 976000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 1.0))
    (and (= PriceProv9 8403.0)
         (= ProcProv9 64.0)
         (= MemProv9 976000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 1.0))
    (and (= PriceProv10 8403.0)
         (= ProcProv10 64.0)
         (= MemProv10 976000.0)
         (= StorageProv10 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 2.0))
    (and (= PriceProv6 9152.0)
         (= ProcProv6 64.0)
         (= MemProv6 488000.0)
         (= StorageProv6 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 2.0))
    (and (= PriceProv7 9152.0)
         (= ProcProv7 64.0)
         (= MemProv7 488000.0)
         (= StorageProv7 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 2.0))
    (and (= PriceProv8 9152.0)
         (= ProcProv8 64.0)
         (= MemProv8 488000.0)
         (= StorageProv8 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 2.0))
    (and (= PriceProv9 9152.0)
         (= ProcProv9 64.0)
         (= MemProv9 488000.0)
         (= StorageProv9 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 2.0))
    (and (= PriceProv10 9152.0)
         (= ProcProv10 64.0)
         (= MemProv10 488000.0)
         (= StorageProv10 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 3.0))
    (and (= PriceProv6 2808.0)
         (= ProcProv6 32.0)
         (= MemProv6 60000.0)
         (= StorageProv6 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 3.0))
    (and (= PriceProv7 2808.0)
         (= ProcProv7 32.0)
         (= MemProv7 60000.0)
         (= StorageProv7 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 3.0))
    (and (= PriceProv8 2808.0)
         (= ProcProv8 32.0)
         (= MemProv8 60000.0)
         (= StorageProv8 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 3.0))
    (and (= PriceProv9 2808.0)
         (= ProcProv9 32.0)
         (= MemProv9 60000.0)
         (= StorageProv9 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 3.0))
    (and (= PriceProv10 2808.0)
         (= ProcProv10 32.0)
         (= MemProv10 60000.0)
         (= StorageProv10 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 4.0))
    (and (= PriceProv6 1600.0)
         (= ProcProv6 16.0)
         (= MemProv6 122000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 4.0))
    (and (= PriceProv7 1600.0)
         (= ProcProv7 16.0)
         (= MemProv7 122000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 4.0))
    (and (= PriceProv8 1600.0)
         (= ProcProv8 16.0)
         (= MemProv8 122000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 4.0))
    (and (= PriceProv9 1600.0)
         (= ProcProv9 16.0)
         (= MemProv9 122000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 4.0))
    (and (= PriceProv10 1600.0)
         (= ProcProv10 16.0)
         (= MemProv10 122000.0)
         (= StorageProv10 1000.0))))
(assert ((_ at-least 4)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 2)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert ((_ at-least 2)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10))
(assert ((_ pble 0 7 7 7 7 7 7 7 7 7 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-most 1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ pble 0 3 3 3 3 3 3 3 3 3 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ pble 0 2 2 2 2 2 2 2 2 2 2 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)
    ((_ at-least 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)
    ((_ at-least 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ at-most 1) C3_VM1 C1_VM1))
(assert ((_ at-most 1) C3_VM1 C2_VM1))
(assert ((_ at-most 1) C3_VM1 C5_VM1))
(assert ((_ at-most 1) C3_VM2 C1_VM2))
(assert ((_ at-most 1) C3_VM2 C2_VM2))
(assert ((_ at-most 1) C3_VM2 C5_VM2))
(assert ((_ at-most 1) C3_VM3 C1_VM3))
(assert ((_ at-most 1) C3_VM3 C2_VM3))
(assert ((_ at-most 1) C3_VM3 C5_VM3))
(assert ((_ at-most 1) C3_VM4 C1_VM4))
(assert ((_ at-most 1) C3_VM4 C2_VM4))
(assert ((_ at-most 1) C3_VM4 C5_VM4))
(assert ((_ at-most 1) C3_VM5 C1_VM5))
(assert ((_ at-most 1) C3_VM5 C2_VM5))
(assert ((_ at-most 1) C3_VM5 C5_VM5))
(assert ((_ at-most 1) C3_VM6 C1_VM6))
(assert ((_ at-most 1) C3_VM6 C2_VM6))
(assert ((_ at-most 1) C3_VM6 C5_VM6))
(assert ((_ at-most 1) C3_VM7 C1_VM7))
(assert ((_ at-most 1) C3_VM7 C2_VM7))
(assert ((_ at-most 1) C3_VM7 C5_VM7))
(assert ((_ at-most 1) C3_VM8 C1_VM8))
(assert ((_ at-most 1) C3_VM8 C2_VM8))
(assert ((_ at-most 1) C3_VM8 C5_VM8))
(assert ((_ at-most 1) C3_VM9 C1_VM9))
(assert ((_ at-most 1) C3_VM9 C2_VM9))
(assert ((_ at-most 1) C3_VM9 C5_VM9))
(assert ((_ at-most 1) C3_VM10 C1_VM10))
(assert ((_ at-most 1) C3_VM10 C2_VM10))
(assert ((_ at-most 1) C3_VM10 C5_VM10))
(assert ((_ at-most 1) C4_VM1 C1_VM1))
(assert ((_ at-most 1) C4_VM1 C2_VM1))
(assert ((_ at-most 1) C4_VM1 C5_VM1))
(assert ((_ at-most 1) C4_VM2 C1_VM2))
(assert ((_ at-most 1) C4_VM2 C2_VM2))
(assert ((_ at-most 1) C4_VM2 C5_VM2))
(assert ((_ at-most 1) C4_VM3 C1_VM3))
(assert ((_ at-most 1) C4_VM3 C2_VM3))
(assert ((_ at-most 1) C4_VM3 C5_VM3))
(assert ((_ at-most 1) C4_VM4 C1_VM4))
(assert ((_ at-most 1) C4_VM4 C2_VM4))
(assert ((_ at-most 1) C4_VM4 C5_VM4))
(assert ((_ at-most 1) C4_VM5 C1_VM5))
(assert ((_ at-most 1) C4_VM5 C2_VM5))
(assert ((_ at-most 1) C4_VM5 C5_VM5))
(assert ((_ at-most 1) C4_VM6 C1_VM6))
(assert ((_ at-most 1) C4_VM6 C2_VM6))
(assert ((_ at-most 1) C4_VM6 C5_VM6))
(assert ((_ at-most 1) C4_VM7 C1_VM7))
(assert ((_ at-most 1) C4_VM7 C2_VM7))
(assert ((_ at-most 1) C4_VM7 C5_VM7))
(assert ((_ at-most 1) C4_VM8 C1_VM8))
(assert ((_ at-most 1) C4_VM8 C2_VM8))
(assert ((_ at-most 1) C4_VM8 C5_VM8))
(assert ((_ at-most 1) C4_VM9 C1_VM9))
(assert ((_ at-most 1) C4_VM9 C2_VM9))
(assert ((_ at-most 1) C4_VM9 C5_VM9))
(assert ((_ at-most 1) C4_VM10 C1_VM10))
(assert ((_ at-most 1) C4_VM10 C2_VM10))
(assert ((_ at-most 1) C4_VM10 C5_VM10))
(assert ((_ at-most 1) C5_VM1 C2_VM1))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C2_VM2))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C2_VM3))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C2_VM4))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C2_VM5))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ at-most 1) C5_VM6 C2_VM6))
(assert ((_ at-most 1) C5_VM6 C3_VM6))
(assert ((_ at-most 1) C5_VM6 C4_VM6))
(assert ((_ at-most 1) C5_VM7 C2_VM7))
(assert ((_ at-most 1) C5_VM7 C3_VM7))
(assert ((_ at-most 1) C5_VM7 C4_VM7))
(assert ((_ at-most 1) C5_VM8 C2_VM8))
(assert ((_ at-most 1) C5_VM8 C3_VM8))
(assert ((_ at-most 1) C5_VM8 C4_VM8))
(assert ((_ at-most 1) C5_VM9 C2_VM9))
(assert ((_ at-most 1) C5_VM9 C3_VM9))
(assert ((_ at-most 1) C5_VM9 C4_VM9))
(assert ((_ at-most 1) C5_VM10 C2_VM10))
(assert ((_ at-most 1) C5_VM10 C3_VM10))
(assert ((_ at-most 1) C5_VM10 C4_VM10))
(assert ((_ at-least 1)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 1)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 2)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 4)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 2)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 4)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 2)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 4)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 2)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 4)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 2)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 4)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (=> (not C1_VM6) (= p16 0)))
(assert (=> C1_VM6 (= p16 2)))
(assert (=> (not C2_VM6) (= p26 0)))
(assert (=> C2_VM6 (= p26 2)))
(assert (=> (not C3_VM6) (= p36 0)))
(assert (=> C3_VM6 (= p36 4)))
(assert (=> (not C4_VM6) (= p46 0)))
(assert (=> C4_VM6 (= p46 4)))
(assert (=> (not C5_VM6) (= p56 0)))
(assert (=> C5_VM6 (= p56 4)))
(assert (=> (not C1_VM7) (= p17 0)))
(assert (=> C1_VM7 (= p17 2)))
(assert (=> (not C2_VM7) (= p27 0)))
(assert (=> C2_VM7 (= p27 2)))
(assert (=> (not C3_VM7) (= p37 0)))
(assert (=> C3_VM7 (= p37 4)))
(assert (=> (not C4_VM7) (= p47 0)))
(assert (=> C4_VM7 (= p47 4)))
(assert (=> (not C5_VM7) (= p57 0)))
(assert (=> C5_VM7 (= p57 4)))
(assert (=> (not C1_VM8) (= p18 0)))
(assert (=> C1_VM8 (= p18 2)))
(assert (=> (not C2_VM8) (= p28 0)))
(assert (=> C2_VM8 (= p28 2)))
(assert (=> (not C3_VM8) (= p38 0)))
(assert (=> C3_VM8 (= p38 4)))
(assert (=> (not C4_VM8) (= p48 0)))
(assert (=> C4_VM8 (= p48 4)))
(assert (=> (not C5_VM8) (= p58 0)))
(assert (=> C5_VM8 (= p58 4)))
(assert (=> (not C1_VM9) (= p19 0)))
(assert (=> C1_VM9 (= p19 2)))
(assert (=> (not C2_VM9) (= p29 0)))
(assert (=> C2_VM9 (= p29 2)))
(assert (=> (not C3_VM9) (= p39 0)))
(assert (=> C3_VM9 (= p39 4)))
(assert (=> (not C4_VM9) (= p49 0)))
(assert (=> C4_VM9 (= p49 4)))
(assert (=> (not C5_VM9) (= p59 0)))
(assert (=> C5_VM9 (= p59 4)))
(assert (=> (not C1_VM10) (= p110 0)))
(assert (=> C1_VM10 (= p110 2)))
(assert (=> (not C2_VM10) (= p210 0)))
(assert (=> C2_VM10 (= p210 2)))
(assert (=> (not C3_VM10) (= p310 0)))
(assert (=> C3_VM10 (= p310 4)))
(assert (=> (not C4_VM10) (= p410 0)))
(assert (=> C4_VM10 (= p410 4)))
(assert (=> (not C5_VM10) (= p510 0)))
(assert (=> C5_VM10 (= p510 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (<= (to_real (+ 0 p16 p26 p36 p46 p56)) ProcProv6))
(assert (<= (to_real (+ 0 p17 p27 p37 p47 p57)) ProcProv7))
(assert (<= (to_real (+ 0 p18 p28 p38 p48 p58)) ProcProv8))
(assert (<= (to_real (+ 0 p19 p29 p39 p49 p59)) ProcProv9))
(assert (<= (to_real (+ 0 p110 p210 p310 p410 p510)) ProcProv10))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 512)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 512)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 2048)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 2048)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 4000)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 512)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 512)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 2048)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 2048)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 4000)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 512)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 512)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 2048)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 2048)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 4000)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 512)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 512)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 2048)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 2048)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 4000)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 512)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 512)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 2048)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 2048)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 4000)))
(assert (=> (not C1_VM6) (= m16 0)))
(assert (=> C1_VM6 (= m16 512)))
(assert (=> (not C2_VM6) (= m26 0)))
(assert (=> C2_VM6 (= m26 512)))
(assert (=> (not C3_VM6) (= m36 0)))
(assert (=> C3_VM6 (= m36 2048)))
(assert (=> (not C4_VM6) (= m46 0)))
(assert (=> C4_VM6 (= m46 2048)))
(assert (=> (not C5_VM6) (= m56 0)))
(assert (=> C5_VM6 (= m56 4000)))
(assert (=> (not C1_VM7) (= m17 0)))
(assert (=> C1_VM7 (= m17 512)))
(assert (=> (not C2_VM7) (= m27 0)))
(assert (=> C2_VM7 (= m27 512)))
(assert (=> (not C3_VM7) (= m37 0)))
(assert (=> C3_VM7 (= m37 2048)))
(assert (=> (not C4_VM7) (= m47 0)))
(assert (=> C4_VM7 (= m47 2048)))
(assert (=> (not C5_VM7) (= m57 0)))
(assert (=> C5_VM7 (= m57 4000)))
(assert (=> (not C1_VM8) (= m18 0)))
(assert (=> C1_VM8 (= m18 512)))
(assert (=> (not C2_VM8) (= m28 0)))
(assert (=> C2_VM8 (= m28 512)))
(assert (=> (not C3_VM8) (= m38 0)))
(assert (=> C3_VM8 (= m38 2048)))
(assert (=> (not C4_VM8) (= m48 0)))
(assert (=> C4_VM8 (= m48 2048)))
(assert (=> (not C5_VM8) (= m58 0)))
(assert (=> C5_VM8 (= m58 4000)))
(assert (=> (not C1_VM9) (= m19 0)))
(assert (=> C1_VM9 (= m19 512)))
(assert (=> (not C2_VM9) (= m29 0)))
(assert (=> C2_VM9 (= m29 512)))
(assert (=> (not C3_VM9) (= m39 0)))
(assert (=> C3_VM9 (= m39 2048)))
(assert (=> (not C4_VM9) (= m49 0)))
(assert (=> C4_VM9 (= m49 2048)))
(assert (=> (not C5_VM9) (= m59 0)))
(assert (=> C5_VM9 (= m59 4000)))
(assert (=> (not C1_VM10) (= m110 0)))
(assert (=> C1_VM10 (= m110 512)))
(assert (=> (not C2_VM10) (= m210 0)))
(assert (=> C2_VM10 (= m210 512)))
(assert (=> (not C3_VM10) (= m310 0)))
(assert (=> C3_VM10 (= m310 2048)))
(assert (=> (not C4_VM10) (= m410 0)))
(assert (=> C4_VM10 (= m410 2048)))
(assert (=> (not C5_VM10) (= m510 0)))
(assert (=> C5_VM10 (= m510 4000)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (<= (to_real (+ 0 m16 m26 m36 m46 m56)) MemProv6))
(assert (<= (to_real (+ 0 m17 m27 m37 m47 m57)) MemProv7))
(assert (<= (to_real (+ 0 m18 m28 m38 m48 m58)) MemProv8))
(assert (<= (to_real (+ 0 m19 m29 m39 m49 m59)) MemProv9))
(assert (<= (to_real (+ 0 m110 m210 m310 m410 m510)) MemProv10))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1000)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 2000)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 500)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 500)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1000)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 2000)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 500)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 500)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1000)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 2000)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 500)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 500)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1000)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 2000)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 500)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 500)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1000)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 2000)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 500)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 500)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (=> (not C1_VM6) (= s16 0)))
(assert (=> C1_VM6 (= s16 1000)))
(assert (=> (not C2_VM6) (= s26 0)))
(assert (=> C2_VM6 (= s26 2000)))
(assert (=> (not C3_VM6) (= s36 0)))
(assert (=> C3_VM6 (= s36 500)))
(assert (=> (not C4_VM6) (= s46 0)))
(assert (=> C4_VM6 (= s46 500)))
(assert (=> (not C5_VM6) (= s56 0)))
(assert (=> C5_VM6 (= s56 500)))
(assert (=> (not C1_VM7) (= s17 0)))
(assert (=> C1_VM7 (= s17 1000)))
(assert (=> (not C2_VM7) (= s27 0)))
(assert (=> C2_VM7 (= s27 2000)))
(assert (=> (not C3_VM7) (= s37 0)))
(assert (=> C3_VM7 (= s37 500)))
(assert (=> (not C4_VM7) (= s47 0)))
(assert (=> C4_VM7 (= s47 500)))
(assert (=> (not C5_VM7) (= s57 0)))
(assert (=> C5_VM7 (= s57 500)))
(assert (=> (not C1_VM8) (= s18 0)))
(assert (=> C1_VM8 (= s18 1000)))
(assert (=> (not C2_VM8) (= s28 0)))
(assert (=> C2_VM8 (= s28 2000)))
(assert (=> (not C3_VM8) (= s38 0)))
(assert (=> C3_VM8 (= s38 500)))
(assert (=> (not C4_VM8) (= s48 0)))
(assert (=> C4_VM8 (= s48 500)))
(assert (=> (not C5_VM8) (= s58 0)))
(assert (=> C5_VM8 (= s58 500)))
(assert (=> (not C1_VM9) (= s19 0)))
(assert (=> C1_VM9 (= s19 1000)))
(assert (=> (not C2_VM9) (= s29 0)))
(assert (=> C2_VM9 (= s29 2000)))
(assert (=> (not C3_VM9) (= s39 0)))
(assert (=> C3_VM9 (= s39 500)))
(assert (=> (not C4_VM9) (= s49 0)))
(assert (=> C4_VM9 (= s49 500)))
(assert (=> (not C5_VM9) (= s59 0)))
(assert (=> C5_VM9 (= s59 500)))
(assert (=> (not C1_VM10) (= s110 0)))
(assert (=> C1_VM10 (= s110 1000)))
(assert (=> (not C2_VM10) (= s210 0)))
(assert (=> C2_VM10 (= s210 2000)))
(assert (=> (not C3_VM10) (= s310 0)))
(assert (=> C3_VM10 (= s310 500)))
(assert (=> (not C4_VM10) (= s410 0)))
(assert (=> C4_VM10 (= s410 500)))
(assert (=> (not C5_VM10) (= s510 0)))
(assert (=> C5_VM10 (= s510 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(assert (<= (to_real (+ 0 s16 s26 s36 s46 s56)) StorageProv6))
(assert (<= (to_real (+ 0 s17 s27 s37 s47 s57)) StorageProv7))
(assert (<= (to_real (+ 0 s18 s28 s38 s48 s58)) StorageProv8))
(assert (<= (to_real (+ 0 s19 s29 s39 s49 s59)) StorageProv9))
(assert (<= (to_real (+ 0 s110 s210 s310 s410 s510)) StorageProv10))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 p16 p26 p36 p46 p56))
(minimize (+ 0 p17 p27 p37 p47 p57))
(minimize (+ 0 p18 p28 p38 p48 p58))
(minimize (+ 0 p19 p29 p39 p49 p59))
(minimize (+ 0 p110 p210 p310 p410 p510))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 m16 m26 m36 m46 m56))
(minimize (+ 0 m17 m27 m37 m47 m57))
(minimize (+ 0 m18 m28 m38 m48 m58))
(minimize (+ 0 m19 m29 m39 m49 m59))
(minimize (+ 0 m110 m210 m310 m410 m510))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0 s16 s26 s36 s46 s56))
(minimize (+ 0 s17 s27 s37 s47 s57))
(minimize (+ 0 s18 s28 s38 s48 s58))
(minimize (+ 0 s19 s29 s39 s49 s59))
(minimize (+ 0 s110 s210 s310 s410 s510))
(minimize (+ 0.0
   PriceProv1
   PriceProv2
   PriceProv3
   PriceProv4
   PriceProv5
   PriceProv6
   PriceProv7
   PriceProv8
   PriceProv9
   PriceProv10))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun VM6Type () Real)
(declare-fun VM7Type () Real)
(declare-fun VM8Type () Real)
(declare-fun VM9Type () Real)
(declare-fun VM10Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun PriceProv6 () Real)
(declare-fun C5_VM6 () Bool)
(declare-fun C4_VM6 () Bool)
(declare-fun C3_VM6 () Bool)
(declare-fun C2_VM6 () Bool)
(declare-fun C1_VM6 () Bool)
(declare-fun PriceProv7 () Real)
(declare-fun C5_VM7 () Bool)
(declare-fun C4_VM7 () Bool)
(declare-fun C3_VM7 () Bool)
(declare-fun C2_VM7 () Bool)
(declare-fun C1_VM7 () Bool)
(declare-fun PriceProv8 () Real)
(declare-fun C5_VM8 () Bool)
(declare-fun C4_VM8 () Bool)
(declare-fun C3_VM8 () Bool)
(declare-fun C2_VM8 () Bool)
(declare-fun C1_VM8 () Bool)
(declare-fun PriceProv9 () Real)
(declare-fun C5_VM9 () Bool)
(declare-fun C4_VM9 () Bool)
(declare-fun C3_VM9 () Bool)
(declare-fun C2_VM9 () Bool)
(declare-fun C1_VM9 () Bool)
(declare-fun PriceProv10 () Real)
(declare-fun C5_VM10 () Bool)
(declare-fun C4_VM10 () Bool)
(declare-fun C3_VM10 () Bool)
(declare-fun C2_VM10 () Bool)
(declare-fun C1_VM10 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun StorageProv6 () Real)
(declare-fun MemProv6 () Real)
(declare-fun ProcProv6 () Real)
(declare-fun StorageProv7 () Real)
(declare-fun MemProv7 () Real)
(declare-fun ProcProv7 () Real)
(declare-fun StorageProv8 () Real)
(declare-fun MemProv8 () Real)
(declare-fun ProcProv8 () Real)
(declare-fun StorageProv9 () Real)
(declare-fun MemProv9 () Real)
(declare-fun ProcProv9 () Real)
(declare-fun StorageProv10 () Real)
(declare-fun MemProv10 () Real)
(declare-fun ProcProv10 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun p16 () Int)
(declare-fun p26 () Int)
(declare-fun p36 () Int)
(declare-fun p46 () Int)
(declare-fun p56 () Int)
(declare-fun p17 () Int)
(declare-fun p27 () Int)
(declare-fun p37 () Int)
(declare-fun p47 () Int)
(declare-fun p57 () Int)
(declare-fun p18 () Int)
(declare-fun p28 () Int)
(declare-fun p38 () Int)
(declare-fun p48 () Int)
(declare-fun p58 () Int)
(declare-fun p19 () Int)
(declare-fun p29 () Int)
(declare-fun p39 () Int)
(declare-fun p49 () Int)
(declare-fun p59 () Int)
(declare-fun p110 () Int)
(declare-fun p210 () Int)
(declare-fun p310 () Int)
(declare-fun p410 () Int)
(declare-fun p510 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun m16 () Int)
(declare-fun m26 () Int)
(declare-fun m36 () Int)
(declare-fun m46 () Int)
(declare-fun m56 () Int)
(declare-fun m17 () Int)
(declare-fun m27 () Int)
(declare-fun m37 () Int)
(declare-fun m47 () Int)
(declare-fun m57 () Int)
(declare-fun m18 () Int)
(declare-fun m28 () Int)
(declare-fun m38 () Int)
(declare-fun m48 () Int)
(declare-fun m58 () Int)
(declare-fun m19 () Int)
(declare-fun m29 () Int)
(declare-fun m39 () Int)
(declare-fun m49 () Int)
(declare-fun m59 () Int)
(declare-fun m110 () Int)
(declare-fun m210 () Int)
(declare-fun m310 () Int)
(declare-fun m410 () Int)
(declare-fun m510 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(declare-fun s16 () Int)
(declare-fun s26 () Int)
(declare-fun s36 () Int)
(declare-fun s46 () Int)
(declare-fun s56 () Int)
(declare-fun s17 () Int)
(declare-fun s27 () Int)
(declare-fun s37 () Int)
(declare-fun s47 () Int)
(declare-fun s57 () Int)
(declare-fun s18 () Int)
(declare-fun s28 () Int)
(declare-fun s38 () Int)
(declare-fun s48 () Int)
(declare-fun s58 () Int)
(declare-fun s19 () Int)
(declare-fun s29 () Int)
(declare-fun s39 () Int)
(declare-fun s49 () Int)
(declare-fun s59 () Int)
(declare-fun s110 () Int)
(declare-fun s210 () Int)
(declare-fun s310 () Int)
(declare-fun s410 () Int)
(declare-fun s510 () Int)
(assert (or (= VM1Type 1.0) (= VM1Type 2.0) (= VM1Type 3.0) (= VM1Type 4.0)))
(assert (or (= VM2Type 1.0) (= VM2Type 2.0) (= VM2Type 3.0) (= VM2Type 4.0)))
(assert (or (= VM3Type 1.0) (= VM3Type 2.0) (= VM3Type 3.0) (= VM3Type 4.0)))
(assert (or (= VM4Type 1.0) (= VM4Type 2.0) (= VM4Type 3.0) (= VM4Type 4.0)))
(assert (or (= VM5Type 1.0) (= VM5Type 2.0) (= VM5Type 3.0) (= VM5Type 4.0)))
(assert (or (= VM6Type 1.0) (= VM6Type 2.0) (= VM6Type 3.0) (= VM6Type 4.0)))
(assert (or (= VM7Type 1.0) (= VM7Type 2.0) (= VM7Type 3.0) (= VM7Type 4.0)))
(assert (or (= VM8Type 1.0) (= VM8Type 2.0) (= VM8Type 3.0) (= VM8Type 4.0)))
(assert (or (= VM9Type 1.0) (= VM9Type 2.0) (= VM9Type 3.0) (= VM9Type 4.0)))
(assert (or (= VM10Type 1.0) (= VM10Type 2.0) (= VM10Type 3.0) (= VM10Type 4.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6)
    (= PriceProv6 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7)
    (= PriceProv7 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8)
    (= PriceProv8 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9)
    (= PriceProv9 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
    (= PriceProv10 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 1.0))
    (and (= PriceProv6 8403.0)
         (= ProcProv6 64.0)
         (= MemProv6 976000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 1.0))
    (and (= PriceProv7 8403.0)
         (= ProcProv7 64.0)
         (= MemProv7 976000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 1.0))
    (and (= PriceProv8 8403.0)
         (= ProcProv8 64.0)
         (= MemProv8 976000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 1.0))
    (and (= PriceProv9 8403.0)
         (= ProcProv9 64.0)
         (= MemProv9 976000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 1.0))
    (and (= PriceProv10 8403.0)
         (= ProcProv10 64.0)
         (= MemProv10 976000.0)
         (= StorageProv10 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 2.0))
    (and (= PriceProv6 9152.0)
         (= ProcProv6 64.0)
         (= MemProv6 488000.0)
         (= StorageProv6 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 2.0))
    (and (= PriceProv7 9152.0)
         (= ProcProv7 64.0)
         (= MemProv7 488000.0)
         (= StorageProv7 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 2.0))
    (and (= PriceProv8 9152.0)
         (= ProcProv8 64.0)
         (= MemProv8 488000.0)
         (= StorageProv8 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 2.0))
    (and (= PriceProv9 9152.0)
         (= ProcProv9 64.0)
         (= MemProv9 488000.0)
         (= StorageProv9 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 2.0))
    (and (= PriceProv10 9152.0)
         (= ProcProv10 64.0)
         (= MemProv10 488000.0)
         (= StorageProv10 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 3.0))
    (and (= PriceProv6 2808.0)
         (= ProcProv6 32.0)
         (= MemProv6 60000.0)
         (= StorageProv6 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 3.0))
    (and (= PriceProv7 2808.0)
         (= ProcProv7 32.0)
         (= MemProv7 60000.0)
         (= StorageProv7 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 3.0))
    (and (= PriceProv8 2808.0)
         (= ProcProv8 32.0)
         (= MemProv8 60000.0)
         (= StorageProv8 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 3.0))
    (and (= PriceProv9 2808.0)
         (= ProcProv9 32.0)
         (= MemProv9 60000.0)
         (= StorageProv9 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 3.0))
    (and (= PriceProv10 2808.0)
         (= ProcProv10 32.0)
         (= MemProv10 60000.0)
         (= StorageProv10 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) (= VM6Type 4.0))
    (and (= PriceProv6 1600.0)
         (= ProcProv6 16.0)
         (= MemProv6 122000.0)
         (= StorageProv6 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM7 C2_VM7 C3_VM7 C4_VM7 C5_VM7) (= VM7Type 4.0))
    (and (= PriceProv7 1600.0)
         (= ProcProv7 16.0)
         (= MemProv7 122000.0)
         (= StorageProv7 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM8 C2_VM8 C3_VM8 C4_VM8 C5_VM8) (= VM8Type 4.0))
    (and (= PriceProv8 1600.0)
         (= ProcProv8 16.0)
         (= MemProv8 122000.0)
         (= StorageProv8 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM9 C2_VM9 C3_VM9 C4_VM9 C5_VM9) (= VM9Type 4.0))
    (and (= PriceProv9 1600.0)
         (= ProcProv9 16.0)
         (= MemProv9 122000.0)
         (= StorageProv9 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM10 C2_VM10 C3_VM10 C4_VM10 C5_VM10)
         (= VM10Type 4.0))
    (and (= PriceProv10 1600.0)
         (= ProcProv10 16.0)
         (= MemProv10 122000.0)
         (= StorageProv10 1000.0))))
(assert ((_ at-least 4)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 2)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert ((_ at-least 2)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10))
(assert ((_ pble 0 7 7 7 7 7 7 7 7 7 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-most 1)
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ pble 0 3 3 3 3 3 3 3 3 3 3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ pble 0 2 2 2 2 2 2 2 2 2 2 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)
    ((_ at-least 1)
      C4_VM1
      C4_VM2
      C4_VM3
      C4_VM4
      C4_VM5
      C4_VM6
      C4_VM7
      C4_VM8
      C4_VM9
      C4_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C4_VM1
  C4_VM2
  C4_VM3
  C4_VM4
  C4_VM5
  C4_VM6
  C4_VM7
  C4_VM8
  C4_VM9
  C4_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)
    ((_ at-least 1)
      C5_VM1
      C5_VM2
      C5_VM3
      C5_VM4
      C5_VM5
      C5_VM6
      C5_VM7
      C5_VM8
      C5_VM9
      C5_VM10)))
(assert (or ((_ pbeq 0 1 1 1 1 1 1 1 1 1 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)
    ((_ at-least 1)
      C3_VM1
      C3_VM2
      C3_VM3
      C3_VM4
      C3_VM5
      C3_VM6
      C3_VM7
      C3_VM8
      C3_VM9
      C3_VM10)))
(assert ((_ at-least 1)
  C5_VM1
  C5_VM2
  C5_VM3
  C5_VM4
  C5_VM5
  C5_VM6
  C5_VM7
  C5_VM8
  C5_VM9
  C5_VM10
  C3_VM1
  C3_VM2
  C3_VM3
  C3_VM4
  C3_VM5
  C3_VM6
  C3_VM7
  C3_VM8
  C3_VM9
  C3_VM10))
(assert ((_ at-most 1) C3_VM1 C1_VM1))
(assert ((_ at-most 1) C3_VM1 C2_VM1))
(assert ((_ at-most 1) C3_VM1 C5_VM1))
(assert ((_ at-most 1) C3_VM2 C1_VM2))
(assert ((_ at-most 1) C3_VM2 C2_VM2))
(assert ((_ at-most 1) C3_VM2 C5_VM2))
(assert ((_ at-most 1) C3_VM3 C1_VM3))
(assert ((_ at-most 1) C3_VM3 C2_VM3))
(assert ((_ at-most 1) C3_VM3 C5_VM3))
(assert ((_ at-most 1) C3_VM4 C1_VM4))
(assert ((_ at-most 1) C3_VM4 C2_VM4))
(assert ((_ at-most 1) C3_VM4 C5_VM4))
(assert ((_ at-most 1) C3_VM5 C1_VM5))
(assert ((_ at-most 1) C3_VM5 C2_VM5))
(assert ((_ at-most 1) C3_VM5 C5_VM5))
(assert ((_ at-most 1) C3_VM6 C1_VM6))
(assert ((_ at-most 1) C3_VM6 C2_VM6))
(assert ((_ at-most 1) C3_VM6 C5_VM6))
(assert ((_ at-most 1) C3_VM7 C1_VM7))
(assert ((_ at-most 1) C3_VM7 C2_VM7))
(assert ((_ at-most 1) C3_VM7 C5_VM7))
(assert ((_ at-most 1) C3_VM8 C1_VM8))
(assert ((_ at-most 1) C3_VM8 C2_VM8))
(assert ((_ at-most 1) C3_VM8 C5_VM8))
(assert ((_ at-most 1) C3_VM9 C1_VM9))
(assert ((_ at-most 1) C3_VM9 C2_VM9))
(assert ((_ at-most 1) C3_VM9 C5_VM9))
(assert ((_ at-most 1) C3_VM10 C1_VM10))
(assert ((_ at-most 1) C3_VM10 C2_VM10))
(assert ((_ at-most 1) C3_VM10 C5_VM10))
(assert ((_ at-most 1) C4_VM1 C1_VM1))
(assert ((_ at-most 1) C4_VM1 C2_VM1))
(assert ((_ at-most 1) C4_VM1 C5_VM1))
(assert ((_ at-most 1) C4_VM2 C1_VM2))
(assert ((_ at-most 1) C4_VM2 C2_VM2))
(assert ((_ at-most 1) C4_VM2 C5_VM2))
(assert ((_ at-most 1) C4_VM3 C1_VM3))
(assert ((_ at-most 1) C4_VM3 C2_VM3))
(assert ((_ at-most 1) C4_VM3 C5_VM3))
(assert ((_ at-most 1) C4_VM4 C1_VM4))
(assert ((_ at-most 1) C4_VM4 C2_VM4))
(assert ((_ at-most 1) C4_VM4 C5_VM4))
(assert ((_ at-most 1) C4_VM5 C1_VM5))
(assert ((_ at-most 1) C4_VM5 C2_VM5))
(assert ((_ at-most 1) C4_VM5 C5_VM5))
(assert ((_ at-most 1) C4_VM6 C1_VM6))
(assert ((_ at-most 1) C4_VM6 C2_VM6))
(assert ((_ at-most 1) C4_VM6 C5_VM6))
(assert ((_ at-most 1) C4_VM7 C1_VM7))
(assert ((_ at-most 1) C4_VM7 C2_VM7))
(assert ((_ at-most 1) C4_VM7 C5_VM7))
(assert ((_ at-most 1) C4_VM8 C1_VM8))
(assert ((_ at-most 1) C4_VM8 C2_VM8))
(assert ((_ at-most 1) C4_VM8 C5_VM8))
(assert ((_ at-most 1) C4_VM9 C1_VM9))
(assert ((_ at-most 1) C4_VM9 C2_VM9))
(assert ((_ at-most 1) C4_VM9 C5_VM9))
(assert ((_ at-most 1) C4_VM10 C1_VM10))
(assert ((_ at-most 1) C4_VM10 C2_VM10))
(assert ((_ at-most 1) C4_VM10 C5_VM10))
(assert ((_ at-most 1) C5_VM1 C2_VM1))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C2_VM2))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C2_VM3))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C2_VM4))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C2_VM5))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ at-most 1) C5_VM6 C2_VM6))
(assert ((_ at-most 1) C5_VM6 C3_VM6))
(assert ((_ at-most 1) C5_VM6 C4_VM6))
(assert ((_ at-most 1) C5_VM7 C2_VM7))
(assert ((_ at-most 1) C5_VM7 C3_VM7))
(assert ((_ at-most 1) C5_VM7 C4_VM7))
(assert ((_ at-most 1) C5_VM8 C2_VM8))
(assert ((_ at-most 1) C5_VM8 C3_VM8))
(assert ((_ at-most 1) C5_VM8 C4_VM8))
(assert ((_ at-most 1) C5_VM9 C2_VM9))
(assert ((_ at-most 1) C5_VM9 C3_VM9))
(assert ((_ at-most 1) C5_VM9 C4_VM9))
(assert ((_ at-most 1) C5_VM10 C2_VM10))
(assert ((_ at-most 1) C5_VM10 C3_VM10))
(assert ((_ at-most 1) C5_VM10 C4_VM10))
(assert ((_ at-least 1)
  C1_VM1
  C1_VM2
  C1_VM3
  C1_VM4
  C1_VM5
  C1_VM6
  C1_VM7
  C1_VM8
  C1_VM9
  C1_VM10))
(assert ((_ at-least 1)
  C2_VM1
  C2_VM2
  C2_VM3
  C2_VM4
  C2_VM5
  C2_VM6
  C2_VM7
  C2_VM8
  C2_VM9
  C2_VM10))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 2)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 4)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 2)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 4)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 2)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 4)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 2)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 4)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 2)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 4)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (=> (not C1_VM6) (= p16 0)))
(assert (=> C1_VM6 (= p16 2)))
(assert (=> (not C2_VM6) (= p26 0)))
(assert (=> C2_VM6 (= p26 2)))
(assert (=> (not C3_VM6) (= p36 0)))
(assert (=> C3_VM6 (= p36 4)))
(assert (=> (not C4_VM6) (= p46 0)))
(assert (=> C4_VM6 (= p46 4)))
(assert (=> (not C5_VM6) (= p56 0)))
(assert (=> C5_VM6 (= p56 4)))
(assert (=> (not C1_VM7) (= p17 0)))
(assert (=> C1_VM7 (= p17 2)))
(assert (=> (not C2_VM7) (= p27 0)))
(assert (=> C2_VM7 (= p27 2)))
(assert (=> (not C3_VM7) (= p37 0)))
(assert (=> C3_VM7 (= p37 4)))
(assert (=> (not C4_VM7) (= p47 0)))
(assert (=> C4_VM7 (= p47 4)))
(assert (=> (not C5_VM7) (= p57 0)))
(assert (=> C5_VM7 (= p57 4)))
(assert (=> (not C1_VM8) (= p18 0)))
(assert (=> C1_VM8 (= p18 2)))
(assert (=> (not C2_VM8) (= p28 0)))
(assert (=> C2_VM8 (= p28 2)))
(assert (=> (not C3_VM8) (= p38 0)))
(assert (=> C3_VM8 (= p38 4)))
(assert (=> (not C4_VM8) (= p48 0)))
(assert (=> C4_VM8 (= p48 4)))
(assert (=> (not C5_VM8) (= p58 0)))
(assert (=> C5_VM8 (= p58 4)))
(assert (=> (not C1_VM9) (= p19 0)))
(assert (=> C1_VM9 (= p19 2)))
(assert (=> (not C2_VM9) (= p29 0)))
(assert (=> C2_VM9 (= p29 2)))
(assert (=> (not C3_VM9) (= p39 0)))
(assert (=> C3_VM9 (= p39 4)))
(assert (=> (not C4_VM9) (= p49 0)))
(assert (=> C4_VM9 (= p49 4)))
(assert (=> (not C5_VM9) (= p59 0)))
(assert (=> C5_VM9 (= p59 4)))
(assert (=> (not C1_VM10) (= p110 0)))
(assert (=> C1_VM10 (= p110 2)))
(assert (=> (not C2_VM10) (= p210 0)))
(assert (=> C2_VM10 (= p210 2)))
(assert (=> (not C3_VM10) (= p310 0)))
(assert (=> C3_VM10 (= p310 4)))
(assert (=> (not C4_VM10) (= p410 0)))
(assert (=> C4_VM10 (= p410 4)))
(assert (=> (not C5_VM10) (= p510 0)))
(assert (=> C5_VM10 (= p510 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (<= (to_real (+ 0 p16 p26 p36 p46 p56)) ProcProv6))
(assert (<= (to_real (+ 0 p17 p27 p37 p47 p57)) ProcProv7))
(assert (<= (to_real (+ 0 p18 p28 p38 p48 p58)) ProcProv8))
(assert (<= (to_real (+ 0 p19 p29 p39 p49 p59)) ProcProv9))
(assert (<= (to_real (+ 0 p110 p210 p310 p410 p510)) ProcProv10))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 512)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 512)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 2048)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 2048)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 4000)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 512)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 512)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 2048)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 2048)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 4000)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 512)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 512)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 2048)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 2048)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 4000)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 512)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 512)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 2048)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 2048)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 4000)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 512)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 512)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 2048)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 2048)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 4000)))
(assert (=> (not C1_VM6) (= m16 0)))
(assert (=> C1_VM6 (= m16 512)))
(assert (=> (not C2_VM6) (= m26 0)))
(assert (=> C2_VM6 (= m26 512)))
(assert (=> (not C3_VM6) (= m36 0)))
(assert (=> C3_VM6 (= m36 2048)))
(assert (=> (not C4_VM6) (= m46 0)))
(assert (=> C4_VM6 (= m46 2048)))
(assert (=> (not C5_VM6) (= m56 0)))
(assert (=> C5_VM6 (= m56 4000)))
(assert (=> (not C1_VM7) (= m17 0)))
(assert (=> C1_VM7 (= m17 512)))
(assert (=> (not C2_VM7) (= m27 0)))
(assert (=> C2_VM7 (= m27 512)))
(assert (=> (not C3_VM7) (= m37 0)))
(assert (=> C3_VM7 (= m37 2048)))
(assert (=> (not C4_VM7) (= m47 0)))
(assert (=> C4_VM7 (= m47 2048)))
(assert (=> (not C5_VM7) (= m57 0)))
(assert (=> C5_VM7 (= m57 4000)))
(assert (=> (not C1_VM8) (= m18 0)))
(assert (=> C1_VM8 (= m18 512)))
(assert (=> (not C2_VM8) (= m28 0)))
(assert (=> C2_VM8 (= m28 512)))
(assert (=> (not C3_VM8) (= m38 0)))
(assert (=> C3_VM8 (= m38 2048)))
(assert (=> (not C4_VM8) (= m48 0)))
(assert (=> C4_VM8 (= m48 2048)))
(assert (=> (not C5_VM8) (= m58 0)))
(assert (=> C5_VM8 (= m58 4000)))
(assert (=> (not C1_VM9) (= m19 0)))
(assert (=> C1_VM9 (= m19 512)))
(assert (=> (not C2_VM9) (= m29 0)))
(assert (=> C2_VM9 (= m29 512)))
(assert (=> (not C3_VM9) (= m39 0)))
(assert (=> C3_VM9 (= m39 2048)))
(assert (=> (not C4_VM9) (= m49 0)))
(assert (=> C4_VM9 (= m49 2048)))
(assert (=> (not C5_VM9) (= m59 0)))
(assert (=> C5_VM9 (= m59 4000)))
(assert (=> (not C1_VM10) (= m110 0)))
(assert (=> C1_VM10 (= m110 512)))
(assert (=> (not C2_VM10) (= m210 0)))
(assert (=> C2_VM10 (= m210 512)))
(assert (=> (not C3_VM10) (= m310 0)))
(assert (=> C3_VM10 (= m310 2048)))
(assert (=> (not C4_VM10) (= m410 0)))
(assert (=> C4_VM10 (= m410 2048)))
(assert (=> (not C5_VM10) (= m510 0)))
(assert (=> C5_VM10 (= m510 4000)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (<= (to_real (+ 0 m16 m26 m36 m46 m56)) MemProv6))
(assert (<= (to_real (+ 0 m17 m27 m37 m47 m57)) MemProv7))
(assert (<= (to_real (+ 0 m18 m28 m38 m48 m58)) MemProv8))
(assert (<= (to_real (+ 0 m19 m29 m39 m49 m59)) MemProv9))
(assert (<= (to_real (+ 0 m110 m210 m310 m410 m510)) MemProv10))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1000)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 2000)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 500)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 500)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1000)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 2000)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 500)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 500)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1000)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 2000)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 500)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 500)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1000)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 2000)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 500)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 500)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1000)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 2000)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 500)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 500)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (=> (not C1_VM6) (= s16 0)))
(assert (=> C1_VM6 (= s16 1000)))
(assert (=> (not C2_VM6) (= s26 0)))
(assert (=> C2_VM6 (= s26 2000)))
(assert (=> (not C3_VM6) (= s36 0)))
(assert (=> C3_VM6 (= s36 500)))
(assert (=> (not C4_VM6) (= s46 0)))
(assert (=> C4_VM6 (= s46 500)))
(assert (=> (not C5_VM6) (= s56 0)))
(assert (=> C5_VM6 (= s56 500)))
(assert (=> (not C1_VM7) (= s17 0)))
(assert (=> C1_VM7 (= s17 1000)))
(assert (=> (not C2_VM7) (= s27 0)))
(assert (=> C2_VM7 (= s27 2000)))
(assert (=> (not C3_VM7) (= s37 0)))
(assert (=> C3_VM7 (= s37 500)))
(assert (=> (not C4_VM7) (= s47 0)))
(assert (=> C4_VM7 (= s47 500)))
(assert (=> (not C5_VM7) (= s57 0)))
(assert (=> C5_VM7 (= s57 500)))
(assert (=> (not C1_VM8) (= s18 0)))
(assert (=> C1_VM8 (= s18 1000)))
(assert (=> (not C2_VM8) (= s28 0)))
(assert (=> C2_VM8 (= s28 2000)))
(assert (=> (not C3_VM8) (= s38 0)))
(assert (=> C3_VM8 (= s38 500)))
(assert (=> (not C4_VM8) (= s48 0)))
(assert (=> C4_VM8 (= s48 500)))
(assert (=> (not C5_VM8) (= s58 0)))
(assert (=> C5_VM8 (= s58 500)))
(assert (=> (not C1_VM9) (= s19 0)))
(assert (=> C1_VM9 (= s19 1000)))
(assert (=> (not C2_VM9) (= s29 0)))
(assert (=> C2_VM9 (= s29 2000)))
(assert (=> (not C3_VM9) (= s39 0)))
(assert (=> C3_VM9 (= s39 500)))
(assert (=> (not C4_VM9) (= s49 0)))
(assert (=> C4_VM9 (= s49 500)))
(assert (=> (not C5_VM9) (= s59 0)))
(assert (=> C5_VM9 (= s59 500)))
(assert (=> (not C1_VM10) (= s110 0)))
(assert (=> C1_VM10 (= s110 1000)))
(assert (=> (not C2_VM10) (= s210 0)))
(assert (=> C2_VM10 (= s210 2000)))
(assert (=> (not C3_VM10) (= s310 0)))
(assert (=> C3_VM10 (= s310 500)))
(assert (=> (not C4_VM10) (= s410 0)))
(assert (=> C4_VM10 (= s410 500)))
(assert (=> (not C5_VM10) (= s510 0)))
(assert (=> C5_VM10 (= s510 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(assert (<= (to_real (+ 0 s16 s26 s36 s46 s56)) StorageProv6))
(assert (<= (to_real (+ 0 s17 s27 s37 s47 s57)) StorageProv7))
(assert (<= (to_real (+ 0 s18 s28 s38 s48 s58)) StorageProv8))
(assert (<= (to_real (+ 0 s19 s29 s39 s49 s59)) StorageProv9))
(assert (<= (to_real (+ 0 s110 s210 s310 s410 s510)) StorageProv10))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 p16 p26 p36 p46 p56))
(minimize (+ 0 p17 p27 p37 p47 p57))
(minimize (+ 0 p18 p28 p38 p48 p58))
(minimize (+ 0 p19 p29 p39 p49 p59))
(minimize (+ 0 p110 p210 p310 p410 p510))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 m16 m26 m36 m46 m56))
(minimize (+ 0 m17 m27 m37 m47 m57))
(minimize (+ 0 m18 m28 m38 m48 m58))
(minimize (+ 0 m19 m29 m39 m49 m59))
(minimize (+ 0 m110 m210 m310 m410 m510))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0 s16 s26 s36 s46 s56))
(minimize (+ 0 s17 s27 s37 s47 s57))
(minimize (+ 0 s18 s28 s38 s48 s58))
(minimize (+ 0 s19 s29 s39 s49 s59))
(minimize (+ 0 s110 s210 s310 s410 s510))
(minimize (+ 0.0
   PriceProv1
   PriceProv2
   PriceProv3
   PriceProv4
   PriceProv5
   PriceProv6
   PriceProv7
   PriceProv8
   PriceProv9
   PriceProv10))
(check-sat)
