(set-info :smt-lib-version 2.6)
(set-logic QF_LRA)
(set-info :source |
Generated by: Mădălina Erașcu, Răzvan Meteș 
Generated on: 2019-03-07
Application: SecureBillingEmail
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :minimum 8707/1000

(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(assert (or (= VM1Type 1.0)
    (= VM1Type 2.0)
    (= VM1Type 3.0)
    (= VM1Type 4.0)
    (= VM1Type 5.0)
    (= VM1Type 6.0)
    (= VM1Type 7.0)
    (= VM1Type 8.0)
    (= VM1Type 9.0)
    (= VM1Type 10.0)))
(assert (or (= VM2Type 1.0)
    (= VM2Type 2.0)
    (= VM2Type 3.0)
    (= VM2Type 4.0)
    (= VM2Type 5.0)
    (= VM2Type 6.0)
    (= VM2Type 7.0)
    (= VM2Type 8.0)
    (= VM2Type 9.0)
    (= VM2Type 10.0)))
(assert (or (= VM3Type 1.0)
    (= VM3Type 2.0)
    (= VM3Type 3.0)
    (= VM3Type 4.0)
    (= VM3Type 5.0)
    (= VM3Type 6.0)
    (= VM3Type 7.0)
    (= VM3Type 8.0)
    (= VM3Type 9.0)
    (= VM3Type 10.0)))
(assert (or (= VM4Type 1.0)
    (= VM4Type 2.0)
    (= VM4Type 3.0)
    (= VM4Type 4.0)
    (= VM4Type 5.0)
    (= VM4Type 6.0)
    (= VM4Type 7.0)
    (= VM4Type 8.0)
    (= VM4Type 9.0)
    (= VM4Type 10.0)))
(assert (or (= VM5Type 1.0)
    (= VM5Type 2.0)
    (= VM5Type 3.0)
    (= VM5Type 4.0)
    (= VM5Type 5.0)
    (= VM5Type 6.0)
    (= VM5Type 7.0)
    (= VM5Type 8.0)
    (= VM5Type 9.0)
    (= VM5Type 10.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 5.0))
    (and (= PriceProv1 5520.0)
         (= ProcProv1 17.0)
         (= MemProv1 117000.0)
         (= StorageProv1 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 5.0))
    (and (= PriceProv2 5520.0)
         (= ProcProv2 17.0)
         (= MemProv2 117000.0)
         (= StorageProv2 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 5.0))
    (and (= PriceProv3 5520.0)
         (= ProcProv3 17.0)
         (= MemProv3 117000.0)
         (= StorageProv3 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 5.0))
    (and (= PriceProv4 5520.0)
         (= ProcProv4 17.0)
         (= MemProv4 117000.0)
         (= StorageProv4 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 5.0))
    (and (= PriceProv5 5520.0)
         (= ProcProv5 17.0)
         (= MemProv5 117000.0)
         (= StorageProv5 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 6.0))
    (and (= PriceProv1 688.0)
         (= ProcProv1 8.0)
         (= MemProv1 61000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 6.0))
    (and (= PriceProv2 688.0)
         (= ProcProv2 8.0)
         (= MemProv2 61000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 6.0))
    (and (= PriceProv3 688.0)
         (= ProcProv3 8.0)
         (= MemProv3 61000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 6.0))
    (and (= PriceProv4 688.0)
         (= ProcProv4 8.0)
         (= MemProv4 61000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 6.0))
    (and (= PriceProv5 688.0)
         (= ProcProv5 8.0)
         (= MemProv5 61000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 7.0))
    (and (= PriceProv1 1209.0)
         (= ProcProv1 4.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 7.0))
    (and (= PriceProv2 1209.0)
         (= ProcProv2 4.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 7.0))
    (and (= PriceProv3 1209.0)
         (= ProcProv3 4.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 7.0))
    (and (= PriceProv4 1209.0)
         (= ProcProv4 4.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 7.0))
    (and (= PriceProv5 1209.0)
         (= ProcProv5 4.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 8.0))
    (and (= PriceProv1 379.0)
         (= ProcProv1 4.0)
         (= MemProv1 30500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 8.0))
    (and (= PriceProv2 379.0)
         (= ProcProv2 4.0)
         (= MemProv2 30500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 8.0))
    (and (= PriceProv3 379.0)
         (= ProcProv3 4.0)
         (= MemProv3 30500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 8.0))
    (and (= PriceProv4 379.0)
         (= ProcProv4 4.0)
         (= MemProv4 30500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 8.0))
    (and (= PriceProv5 379.0)
         (= ProcProv5 4.0)
         (= MemProv5 30500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 9.0))
    (and (= PriceProv1 146.0)
         (= ProcProv1 2.0)
         (= MemProv1 7500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 9.0))
    (and (= PriceProv2 146.0)
         (= ProcProv2 2.0)
         (= MemProv2 7500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 9.0))
    (and (= PriceProv3 146.0)
         (= ProcProv3 2.0)
         (= MemProv3 7500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 9.0))
    (and (= PriceProv4 146.0)
         (= ProcProv4 2.0)
         (= MemProv4 7500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 9.0))
    (and (= PriceProv5 146.0)
         (= ProcProv5 2.0)
         (= MemProv5 7500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 10.0))
    (and (= PriceProv1 134.0)
         (= ProcProv1 1.0)
         (= MemProv1 3750.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 10.0))
    (and (= PriceProv2 134.0)
         (= ProcProv2 1.0)
         (= MemProv2 3750.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 10.0))
    (and (= PriceProv3 134.0)
         (= ProcProv3 1.0)
         (= MemProv3 3750.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 10.0))
    (and (= PriceProv4 134.0)
         (= ProcProv4 1.0)
         (= MemProv4 3750.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 10.0))
    (and (= PriceProv5 134.0)
         (= ProcProv5 1.0)
         (= MemProv5 3750.0)
         (= StorageProv5 1000.0))))
(assert ((_ at-most 1) C1_VM1 C2_VM1))
(assert ((_ at-most 1) C1_VM1 C3_VM1))
(assert ((_ at-most 1) C1_VM1 C4_VM1))
(assert ((_ at-most 1) C1_VM1 C5_VM1))
(assert ((_ at-most 1) C1_VM2 C2_VM2))
(assert ((_ at-most 1) C1_VM2 C3_VM2))
(assert ((_ at-most 1) C1_VM2 C4_VM2))
(assert ((_ at-most 1) C1_VM2 C5_VM2))
(assert ((_ at-most 1) C1_VM3 C2_VM3))
(assert ((_ at-most 1) C1_VM3 C3_VM3))
(assert ((_ at-most 1) C1_VM3 C4_VM3))
(assert ((_ at-most 1) C1_VM3 C5_VM3))
(assert ((_ at-most 1) C1_VM4 C2_VM4))
(assert ((_ at-most 1) C1_VM4 C3_VM4))
(assert ((_ at-most 1) C1_VM4 C4_VM4))
(assert ((_ at-most 1) C1_VM4 C5_VM4))
(assert ((_ at-most 1) C1_VM5 C2_VM5))
(assert ((_ at-most 1) C1_VM5 C3_VM5))
(assert ((_ at-most 1) C1_VM5 C4_VM5))
(assert ((_ at-most 1) C1_VM5 C5_VM5))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert ((_ at-least 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ at-least 1) C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5))
(assert ((_ at-least 1) C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5))
(assert ((_ at-least 1) C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5))
(assert ((_ at-least 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 4)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 2)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 4)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 2)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 4)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 2)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 4)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 2)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 4)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 2)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 4096)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 2048)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 4096)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 512)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 2048)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 4096)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 2048)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 4096)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 512)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 2048)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 4096)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 2048)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 4096)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 512)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 2048)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 4096)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 2048)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 4096)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 512)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 2048)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 4096)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 2048)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 4096)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 512)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 2048)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1024)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 512)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 512)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 2000)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1024)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 512)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 512)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 2000)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1024)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 512)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 512)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 2000)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1024)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 512)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 512)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 2000)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1024)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 512)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 512)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 2000)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0.0 PriceProv1 PriceProv2 PriceProv3 PriceProv4 PriceProv5))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(assert (or (= VM1Type 1.0)
    (= VM1Type 2.0)
    (= VM1Type 3.0)
    (= VM1Type 4.0)
    (= VM1Type 5.0)
    (= VM1Type 6.0)
    (= VM1Type 7.0)
    (= VM1Type 8.0)
    (= VM1Type 9.0)
    (= VM1Type 10.0)))
(assert (or (= VM2Type 1.0)
    (= VM2Type 2.0)
    (= VM2Type 3.0)
    (= VM2Type 4.0)
    (= VM2Type 5.0)
    (= VM2Type 6.0)
    (= VM2Type 7.0)
    (= VM2Type 8.0)
    (= VM2Type 9.0)
    (= VM2Type 10.0)))
(assert (or (= VM3Type 1.0)
    (= VM3Type 2.0)
    (= VM3Type 3.0)
    (= VM3Type 4.0)
    (= VM3Type 5.0)
    (= VM3Type 6.0)
    (= VM3Type 7.0)
    (= VM3Type 8.0)
    (= VM3Type 9.0)
    (= VM3Type 10.0)))
(assert (or (= VM4Type 1.0)
    (= VM4Type 2.0)
    (= VM4Type 3.0)
    (= VM4Type 4.0)
    (= VM4Type 5.0)
    (= VM4Type 6.0)
    (= VM4Type 7.0)
    (= VM4Type 8.0)
    (= VM4Type 9.0)
    (= VM4Type 10.0)))
(assert (or (= VM5Type 1.0)
    (= VM5Type 2.0)
    (= VM5Type 3.0)
    (= VM5Type 4.0)
    (= VM5Type 5.0)
    (= VM5Type 6.0)
    (= VM5Type 7.0)
    (= VM5Type 8.0)
    (= VM5Type 9.0)
    (= VM5Type 10.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 5.0))
    (and (= PriceProv1 5520.0)
         (= ProcProv1 17.0)
         (= MemProv1 117000.0)
         (= StorageProv1 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 5.0))
    (and (= PriceProv2 5520.0)
         (= ProcProv2 17.0)
         (= MemProv2 117000.0)
         (= StorageProv2 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 5.0))
    (and (= PriceProv3 5520.0)
         (= ProcProv3 17.0)
         (= MemProv3 117000.0)
         (= StorageProv3 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 5.0))
    (and (= PriceProv4 5520.0)
         (= ProcProv4 17.0)
         (= MemProv4 117000.0)
         (= StorageProv4 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 5.0))
    (and (= PriceProv5 5520.0)
         (= ProcProv5 17.0)
         (= MemProv5 117000.0)
         (= StorageProv5 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 6.0))
    (and (= PriceProv1 688.0)
         (= ProcProv1 8.0)
         (= MemProv1 61000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 6.0))
    (and (= PriceProv2 688.0)
         (= ProcProv2 8.0)
         (= MemProv2 61000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 6.0))
    (and (= PriceProv3 688.0)
         (= ProcProv3 8.0)
         (= MemProv3 61000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 6.0))
    (and (= PriceProv4 688.0)
         (= ProcProv4 8.0)
         (= MemProv4 61000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 6.0))
    (and (= PriceProv5 688.0)
         (= ProcProv5 8.0)
         (= MemProv5 61000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 7.0))
    (and (= PriceProv1 1209.0)
         (= ProcProv1 4.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 7.0))
    (and (= PriceProv2 1209.0)
         (= ProcProv2 4.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 7.0))
    (and (= PriceProv3 1209.0)
         (= ProcProv3 4.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 7.0))
    (and (= PriceProv4 1209.0)
         (= ProcProv4 4.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 7.0))
    (and (= PriceProv5 1209.0)
         (= ProcProv5 4.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 8.0))
    (and (= PriceProv1 379.0)
         (= ProcProv1 4.0)
         (= MemProv1 30500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 8.0))
    (and (= PriceProv2 379.0)
         (= ProcProv2 4.0)
         (= MemProv2 30500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 8.0))
    (and (= PriceProv3 379.0)
         (= ProcProv3 4.0)
         (= MemProv3 30500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 8.0))
    (and (= PriceProv4 379.0)
         (= ProcProv4 4.0)
         (= MemProv4 30500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 8.0))
    (and (= PriceProv5 379.0)
         (= ProcProv5 4.0)
         (= MemProv5 30500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 9.0))
    (and (= PriceProv1 146.0)
         (= ProcProv1 2.0)
         (= MemProv1 7500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 9.0))
    (and (= PriceProv2 146.0)
         (= ProcProv2 2.0)
         (= MemProv2 7500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 9.0))
    (and (= PriceProv3 146.0)
         (= ProcProv3 2.0)
         (= MemProv3 7500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 9.0))
    (and (= PriceProv4 146.0)
         (= ProcProv4 2.0)
         (= MemProv4 7500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 9.0))
    (and (= PriceProv5 146.0)
         (= ProcProv5 2.0)
         (= MemProv5 7500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 10.0))
    (and (= PriceProv1 134.0)
         (= ProcProv1 1.0)
         (= MemProv1 3750.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 10.0))
    (and (= PriceProv2 134.0)
         (= ProcProv2 1.0)
         (= MemProv2 3750.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 10.0))
    (and (= PriceProv3 134.0)
         (= ProcProv3 1.0)
         (= MemProv3 3750.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 10.0))
    (and (= PriceProv4 134.0)
         (= ProcProv4 1.0)
         (= MemProv4 3750.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 10.0))
    (and (= PriceProv5 134.0)
         (= ProcProv5 1.0)
         (= MemProv5 3750.0)
         (= StorageProv5 1000.0))))
(assert ((_ at-most 1) C1_VM1 C2_VM1))
(assert ((_ at-most 1) C1_VM1 C3_VM1))
(assert ((_ at-most 1) C1_VM1 C4_VM1))
(assert ((_ at-most 1) C1_VM1 C5_VM1))
(assert ((_ at-most 1) C1_VM2 C2_VM2))
(assert ((_ at-most 1) C1_VM2 C3_VM2))
(assert ((_ at-most 1) C1_VM2 C4_VM2))
(assert ((_ at-most 1) C1_VM2 C5_VM2))
(assert ((_ at-most 1) C1_VM3 C2_VM3))
(assert ((_ at-most 1) C1_VM3 C3_VM3))
(assert ((_ at-most 1) C1_VM3 C4_VM3))
(assert ((_ at-most 1) C1_VM3 C5_VM3))
(assert ((_ at-most 1) C1_VM4 C2_VM4))
(assert ((_ at-most 1) C1_VM4 C3_VM4))
(assert ((_ at-most 1) C1_VM4 C4_VM4))
(assert ((_ at-most 1) C1_VM4 C5_VM4))
(assert ((_ at-most 1) C1_VM5 C2_VM5))
(assert ((_ at-most 1) C1_VM5 C3_VM5))
(assert ((_ at-most 1) C1_VM5 C4_VM5))
(assert ((_ at-most 1) C1_VM5 C5_VM5))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert ((_ at-least 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ at-least 1) C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5))
(assert ((_ at-least 1) C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5))
(assert ((_ at-least 1) C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5))
(assert ((_ at-least 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 4)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 2)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 4)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 2)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 4)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 2)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 4)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 2)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 4)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 2)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 4096)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 2048)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 4096)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 512)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 2048)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 4096)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 2048)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 4096)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 512)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 2048)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 4096)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 2048)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 4096)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 512)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 2048)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 4096)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 2048)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 4096)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 512)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 2048)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 4096)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 2048)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 4096)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 512)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 2048)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1024)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 512)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 512)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 2000)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1024)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 512)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 512)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 2000)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1024)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 512)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 512)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 2000)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1024)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 512)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 512)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 2000)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1024)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 512)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 512)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 2000)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0.0 PriceProv1 PriceProv2 PriceProv3 PriceProv4 PriceProv5))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(assert (or (= VM1Type 1.0)
    (= VM1Type 2.0)
    (= VM1Type 3.0)
    (= VM1Type 4.0)
    (= VM1Type 5.0)
    (= VM1Type 6.0)
    (= VM1Type 7.0)
    (= VM1Type 8.0)
    (= VM1Type 9.0)
    (= VM1Type 10.0)))
(assert (or (= VM2Type 1.0)
    (= VM2Type 2.0)
    (= VM2Type 3.0)
    (= VM2Type 4.0)
    (= VM2Type 5.0)
    (= VM2Type 6.0)
    (= VM2Type 7.0)
    (= VM2Type 8.0)
    (= VM2Type 9.0)
    (= VM2Type 10.0)))
(assert (or (= VM3Type 1.0)
    (= VM3Type 2.0)
    (= VM3Type 3.0)
    (= VM3Type 4.0)
    (= VM3Type 5.0)
    (= VM3Type 6.0)
    (= VM3Type 7.0)
    (= VM3Type 8.0)
    (= VM3Type 9.0)
    (= VM3Type 10.0)))
(assert (or (= VM4Type 1.0)
    (= VM4Type 2.0)
    (= VM4Type 3.0)
    (= VM4Type 4.0)
    (= VM4Type 5.0)
    (= VM4Type 6.0)
    (= VM4Type 7.0)
    (= VM4Type 8.0)
    (= VM4Type 9.0)
    (= VM4Type 10.0)))
(assert (or (= VM5Type 1.0)
    (= VM5Type 2.0)
    (= VM5Type 3.0)
    (= VM5Type 4.0)
    (= VM5Type 5.0)
    (= VM5Type 6.0)
    (= VM5Type 7.0)
    (= VM5Type 8.0)
    (= VM5Type 9.0)
    (= VM5Type 10.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 5.0))
    (and (= PriceProv1 5520.0)
         (= ProcProv1 17.0)
         (= MemProv1 117000.0)
         (= StorageProv1 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 5.0))
    (and (= PriceProv2 5520.0)
         (= ProcProv2 17.0)
         (= MemProv2 117000.0)
         (= StorageProv2 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 5.0))
    (and (= PriceProv3 5520.0)
         (= ProcProv3 17.0)
         (= MemProv3 117000.0)
         (= StorageProv3 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 5.0))
    (and (= PriceProv4 5520.0)
         (= ProcProv4 17.0)
         (= MemProv4 117000.0)
         (= StorageProv4 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 5.0))
    (and (= PriceProv5 5520.0)
         (= ProcProv5 17.0)
         (= MemProv5 117000.0)
         (= StorageProv5 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 6.0))
    (and (= PriceProv1 688.0)
         (= ProcProv1 8.0)
         (= MemProv1 61000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 6.0))
    (and (= PriceProv2 688.0)
         (= ProcProv2 8.0)
         (= MemProv2 61000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 6.0))
    (and (= PriceProv3 688.0)
         (= ProcProv3 8.0)
         (= MemProv3 61000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 6.0))
    (and (= PriceProv4 688.0)
         (= ProcProv4 8.0)
         (= MemProv4 61000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 6.0))
    (and (= PriceProv5 688.0)
         (= ProcProv5 8.0)
         (= MemProv5 61000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 7.0))
    (and (= PriceProv1 1209.0)
         (= ProcProv1 4.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 7.0))
    (and (= PriceProv2 1209.0)
         (= ProcProv2 4.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 7.0))
    (and (= PriceProv3 1209.0)
         (= ProcProv3 4.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 7.0))
    (and (= PriceProv4 1209.0)
         (= ProcProv4 4.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 7.0))
    (and (= PriceProv5 1209.0)
         (= ProcProv5 4.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 8.0))
    (and (= PriceProv1 379.0)
         (= ProcProv1 4.0)
         (= MemProv1 30500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 8.0))
    (and (= PriceProv2 379.0)
         (= ProcProv2 4.0)
         (= MemProv2 30500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 8.0))
    (and (= PriceProv3 379.0)
         (= ProcProv3 4.0)
         (= MemProv3 30500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 8.0))
    (and (= PriceProv4 379.0)
         (= ProcProv4 4.0)
         (= MemProv4 30500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 8.0))
    (and (= PriceProv5 379.0)
         (= ProcProv5 4.0)
         (= MemProv5 30500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 9.0))
    (and (= PriceProv1 146.0)
         (= ProcProv1 2.0)
         (= MemProv1 7500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 9.0))
    (and (= PriceProv2 146.0)
         (= ProcProv2 2.0)
         (= MemProv2 7500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 9.0))
    (and (= PriceProv3 146.0)
         (= ProcProv3 2.0)
         (= MemProv3 7500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 9.0))
    (and (= PriceProv4 146.0)
         (= ProcProv4 2.0)
         (= MemProv4 7500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 9.0))
    (and (= PriceProv5 146.0)
         (= ProcProv5 2.0)
         (= MemProv5 7500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 10.0))
    (and (= PriceProv1 134.0)
         (= ProcProv1 1.0)
         (= MemProv1 3750.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 10.0))
    (and (= PriceProv2 134.0)
         (= ProcProv2 1.0)
         (= MemProv2 3750.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 10.0))
    (and (= PriceProv3 134.0)
         (= ProcProv3 1.0)
         (= MemProv3 3750.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 10.0))
    (and (= PriceProv4 134.0)
         (= ProcProv4 1.0)
         (= MemProv4 3750.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 10.0))
    (and (= PriceProv5 134.0)
         (= ProcProv5 1.0)
         (= MemProv5 3750.0)
         (= StorageProv5 1000.0))))
(assert ((_ at-most 1) C1_VM1 C2_VM1))
(assert ((_ at-most 1) C1_VM1 C3_VM1))
(assert ((_ at-most 1) C1_VM1 C4_VM1))
(assert ((_ at-most 1) C1_VM1 C5_VM1))
(assert ((_ at-most 1) C1_VM2 C2_VM2))
(assert ((_ at-most 1) C1_VM2 C3_VM2))
(assert ((_ at-most 1) C1_VM2 C4_VM2))
(assert ((_ at-most 1) C1_VM2 C5_VM2))
(assert ((_ at-most 1) C1_VM3 C2_VM3))
(assert ((_ at-most 1) C1_VM3 C3_VM3))
(assert ((_ at-most 1) C1_VM3 C4_VM3))
(assert ((_ at-most 1) C1_VM3 C5_VM3))
(assert ((_ at-most 1) C1_VM4 C2_VM4))
(assert ((_ at-most 1) C1_VM4 C3_VM4))
(assert ((_ at-most 1) C1_VM4 C4_VM4))
(assert ((_ at-most 1) C1_VM4 C5_VM4))
(assert ((_ at-most 1) C1_VM5 C2_VM5))
(assert ((_ at-most 1) C1_VM5 C3_VM5))
(assert ((_ at-most 1) C1_VM5 C4_VM5))
(assert ((_ at-most 1) C1_VM5 C5_VM5))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert ((_ at-least 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ at-least 1) C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5))
(assert ((_ at-least 1) C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5))
(assert ((_ at-least 1) C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5))
(assert ((_ at-least 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 4)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 2)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 4)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 2)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 4)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 2)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 4)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 2)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 4)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 2)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 4096)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 2048)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 4096)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 512)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 2048)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 4096)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 2048)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 4096)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 512)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 2048)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 4096)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 2048)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 4096)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 512)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 2048)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 4096)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 2048)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 4096)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 512)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 2048)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 4096)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 2048)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 4096)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 512)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 2048)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1024)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 512)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 512)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 2000)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1024)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 512)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 512)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 2000)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1024)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 512)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 512)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 2000)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1024)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 512)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 512)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 2000)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1024)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 512)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 512)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 2000)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0.0 PriceProv1 PriceProv2 PriceProv3 PriceProv4 PriceProv5))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(assert (or (= VM1Type 1.0)
    (= VM1Type 2.0)
    (= VM1Type 3.0)
    (= VM1Type 4.0)
    (= VM1Type 5.0)
    (= VM1Type 6.0)
    (= VM1Type 7.0)
    (= VM1Type 8.0)
    (= VM1Type 9.0)
    (= VM1Type 10.0)))
(assert (or (= VM2Type 1.0)
    (= VM2Type 2.0)
    (= VM2Type 3.0)
    (= VM2Type 4.0)
    (= VM2Type 5.0)
    (= VM2Type 6.0)
    (= VM2Type 7.0)
    (= VM2Type 8.0)
    (= VM2Type 9.0)
    (= VM2Type 10.0)))
(assert (or (= VM3Type 1.0)
    (= VM3Type 2.0)
    (= VM3Type 3.0)
    (= VM3Type 4.0)
    (= VM3Type 5.0)
    (= VM3Type 6.0)
    (= VM3Type 7.0)
    (= VM3Type 8.0)
    (= VM3Type 9.0)
    (= VM3Type 10.0)))
(assert (or (= VM4Type 1.0)
    (= VM4Type 2.0)
    (= VM4Type 3.0)
    (= VM4Type 4.0)
    (= VM4Type 5.0)
    (= VM4Type 6.0)
    (= VM4Type 7.0)
    (= VM4Type 8.0)
    (= VM4Type 9.0)
    (= VM4Type 10.0)))
(assert (or (= VM5Type 1.0)
    (= VM5Type 2.0)
    (= VM5Type 3.0)
    (= VM5Type 4.0)
    (= VM5Type 5.0)
    (= VM5Type 6.0)
    (= VM5Type 7.0)
    (= VM5Type 8.0)
    (= VM5Type 9.0)
    (= VM5Type 10.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 5.0))
    (and (= PriceProv1 5520.0)
         (= ProcProv1 17.0)
         (= MemProv1 117000.0)
         (= StorageProv1 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 5.0))
    (and (= PriceProv2 5520.0)
         (= ProcProv2 17.0)
         (= MemProv2 117000.0)
         (= StorageProv2 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 5.0))
    (and (= PriceProv3 5520.0)
         (= ProcProv3 17.0)
         (= MemProv3 117000.0)
         (= StorageProv3 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 5.0))
    (and (= PriceProv4 5520.0)
         (= ProcProv4 17.0)
         (= MemProv4 117000.0)
         (= StorageProv4 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 5.0))
    (and (= PriceProv5 5520.0)
         (= ProcProv5 17.0)
         (= MemProv5 117000.0)
         (= StorageProv5 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 6.0))
    (and (= PriceProv1 688.0)
         (= ProcProv1 8.0)
         (= MemProv1 61000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 6.0))
    (and (= PriceProv2 688.0)
         (= ProcProv2 8.0)
         (= MemProv2 61000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 6.0))
    (and (= PriceProv3 688.0)
         (= ProcProv3 8.0)
         (= MemProv3 61000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 6.0))
    (and (= PriceProv4 688.0)
         (= ProcProv4 8.0)
         (= MemProv4 61000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 6.0))
    (and (= PriceProv5 688.0)
         (= ProcProv5 8.0)
         (= MemProv5 61000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 7.0))
    (and (= PriceProv1 1209.0)
         (= ProcProv1 4.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 7.0))
    (and (= PriceProv2 1209.0)
         (= ProcProv2 4.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 7.0))
    (and (= PriceProv3 1209.0)
         (= ProcProv3 4.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 7.0))
    (and (= PriceProv4 1209.0)
         (= ProcProv4 4.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 7.0))
    (and (= PriceProv5 1209.0)
         (= ProcProv5 4.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 8.0))
    (and (= PriceProv1 379.0)
         (= ProcProv1 4.0)
         (= MemProv1 30500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 8.0))
    (and (= PriceProv2 379.0)
         (= ProcProv2 4.0)
         (= MemProv2 30500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 8.0))
    (and (= PriceProv3 379.0)
         (= ProcProv3 4.0)
         (= MemProv3 30500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 8.0))
    (and (= PriceProv4 379.0)
         (= ProcProv4 4.0)
         (= MemProv4 30500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 8.0))
    (and (= PriceProv5 379.0)
         (= ProcProv5 4.0)
         (= MemProv5 30500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 9.0))
    (and (= PriceProv1 146.0)
         (= ProcProv1 2.0)
         (= MemProv1 7500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 9.0))
    (and (= PriceProv2 146.0)
         (= ProcProv2 2.0)
         (= MemProv2 7500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 9.0))
    (and (= PriceProv3 146.0)
         (= ProcProv3 2.0)
         (= MemProv3 7500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 9.0))
    (and (= PriceProv4 146.0)
         (= ProcProv4 2.0)
         (= MemProv4 7500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 9.0))
    (and (= PriceProv5 146.0)
         (= ProcProv5 2.0)
         (= MemProv5 7500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 10.0))
    (and (= PriceProv1 134.0)
         (= ProcProv1 1.0)
         (= MemProv1 3750.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 10.0))
    (and (= PriceProv2 134.0)
         (= ProcProv2 1.0)
         (= MemProv2 3750.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 10.0))
    (and (= PriceProv3 134.0)
         (= ProcProv3 1.0)
         (= MemProv3 3750.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 10.0))
    (and (= PriceProv4 134.0)
         (= ProcProv4 1.0)
         (= MemProv4 3750.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 10.0))
    (and (= PriceProv5 134.0)
         (= ProcProv5 1.0)
         (= MemProv5 3750.0)
         (= StorageProv5 1000.0))))
(assert ((_ at-most 1) C1_VM1 C2_VM1))
(assert ((_ at-most 1) C1_VM1 C3_VM1))
(assert ((_ at-most 1) C1_VM1 C4_VM1))
(assert ((_ at-most 1) C1_VM1 C5_VM1))
(assert ((_ at-most 1) C1_VM2 C2_VM2))
(assert ((_ at-most 1) C1_VM2 C3_VM2))
(assert ((_ at-most 1) C1_VM2 C4_VM2))
(assert ((_ at-most 1) C1_VM2 C5_VM2))
(assert ((_ at-most 1) C1_VM3 C2_VM3))
(assert ((_ at-most 1) C1_VM3 C3_VM3))
(assert ((_ at-most 1) C1_VM3 C4_VM3))
(assert ((_ at-most 1) C1_VM3 C5_VM3))
(assert ((_ at-most 1) C1_VM4 C2_VM4))
(assert ((_ at-most 1) C1_VM4 C3_VM4))
(assert ((_ at-most 1) C1_VM4 C4_VM4))
(assert ((_ at-most 1) C1_VM4 C5_VM4))
(assert ((_ at-most 1) C1_VM5 C2_VM5))
(assert ((_ at-most 1) C1_VM5 C3_VM5))
(assert ((_ at-most 1) C1_VM5 C4_VM5))
(assert ((_ at-most 1) C1_VM5 C5_VM5))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert ((_ at-least 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ at-least 1) C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5))
(assert ((_ at-least 1) C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5))
(assert ((_ at-least 1) C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5))
(assert ((_ at-least 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 4)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 2)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 4)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 2)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 4)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 2)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 4)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 2)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 4)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 2)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 4096)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 2048)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 4096)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 512)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 2048)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 4096)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 2048)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 4096)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 512)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 2048)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 4096)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 2048)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 4096)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 512)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 2048)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 4096)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 2048)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 4096)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 512)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 2048)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 4096)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 2048)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 4096)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 512)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 2048)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1024)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 512)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 512)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 2000)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1024)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 512)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 512)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 2000)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1024)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 512)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 512)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 2000)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1024)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 512)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 512)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 2000)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1024)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 512)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 512)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 2000)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0.0 PriceProv1 PriceProv2 PriceProv3 PriceProv4 PriceProv5))
(check-sat)
(declare-fun VM1Type () Real)
(declare-fun VM2Type () Real)
(declare-fun VM3Type () Real)
(declare-fun VM4Type () Real)
(declare-fun VM5Type () Real)
(declare-fun PriceProv1 () Real)
(declare-fun C5_VM1 () Bool)
(declare-fun C4_VM1 () Bool)
(declare-fun C3_VM1 () Bool)
(declare-fun C2_VM1 () Bool)
(declare-fun C1_VM1 () Bool)
(declare-fun PriceProv2 () Real)
(declare-fun C5_VM2 () Bool)
(declare-fun C4_VM2 () Bool)
(declare-fun C3_VM2 () Bool)
(declare-fun C2_VM2 () Bool)
(declare-fun C1_VM2 () Bool)
(declare-fun PriceProv3 () Real)
(declare-fun C5_VM3 () Bool)
(declare-fun C4_VM3 () Bool)
(declare-fun C3_VM3 () Bool)
(declare-fun C2_VM3 () Bool)
(declare-fun C1_VM3 () Bool)
(declare-fun PriceProv4 () Real)
(declare-fun C5_VM4 () Bool)
(declare-fun C4_VM4 () Bool)
(declare-fun C3_VM4 () Bool)
(declare-fun C2_VM4 () Bool)
(declare-fun C1_VM4 () Bool)
(declare-fun PriceProv5 () Real)
(declare-fun C5_VM5 () Bool)
(declare-fun C4_VM5 () Bool)
(declare-fun C3_VM5 () Bool)
(declare-fun C2_VM5 () Bool)
(declare-fun C1_VM5 () Bool)
(declare-fun StorageProv1 () Real)
(declare-fun MemProv1 () Real)
(declare-fun ProcProv1 () Real)
(declare-fun StorageProv2 () Real)
(declare-fun MemProv2 () Real)
(declare-fun ProcProv2 () Real)
(declare-fun StorageProv3 () Real)
(declare-fun MemProv3 () Real)
(declare-fun ProcProv3 () Real)
(declare-fun StorageProv4 () Real)
(declare-fun MemProv4 () Real)
(declare-fun ProcProv4 () Real)
(declare-fun StorageProv5 () Real)
(declare-fun MemProv5 () Real)
(declare-fun ProcProv5 () Real)
(declare-fun p11 () Int)
(declare-fun p21 () Int)
(declare-fun p31 () Int)
(declare-fun p41 () Int)
(declare-fun p51 () Int)
(declare-fun p12 () Int)
(declare-fun p22 () Int)
(declare-fun p32 () Int)
(declare-fun p42 () Int)
(declare-fun p52 () Int)
(declare-fun p13 () Int)
(declare-fun p23 () Int)
(declare-fun p33 () Int)
(declare-fun p43 () Int)
(declare-fun p53 () Int)
(declare-fun p14 () Int)
(declare-fun p24 () Int)
(declare-fun p34 () Int)
(declare-fun p44 () Int)
(declare-fun p54 () Int)
(declare-fun p15 () Int)
(declare-fun p25 () Int)
(declare-fun p35 () Int)
(declare-fun p45 () Int)
(declare-fun p55 () Int)
(declare-fun m11 () Int)
(declare-fun m21 () Int)
(declare-fun m31 () Int)
(declare-fun m41 () Int)
(declare-fun m51 () Int)
(declare-fun m12 () Int)
(declare-fun m22 () Int)
(declare-fun m32 () Int)
(declare-fun m42 () Int)
(declare-fun m52 () Int)
(declare-fun m13 () Int)
(declare-fun m23 () Int)
(declare-fun m33 () Int)
(declare-fun m43 () Int)
(declare-fun m53 () Int)
(declare-fun m14 () Int)
(declare-fun m24 () Int)
(declare-fun m34 () Int)
(declare-fun m44 () Int)
(declare-fun m54 () Int)
(declare-fun m15 () Int)
(declare-fun m25 () Int)
(declare-fun m35 () Int)
(declare-fun m45 () Int)
(declare-fun m55 () Int)
(declare-fun s11 () Int)
(declare-fun s21 () Int)
(declare-fun s31 () Int)
(declare-fun s41 () Int)
(declare-fun s51 () Int)
(declare-fun s12 () Int)
(declare-fun s22 () Int)
(declare-fun s32 () Int)
(declare-fun s42 () Int)
(declare-fun s52 () Int)
(declare-fun s13 () Int)
(declare-fun s23 () Int)
(declare-fun s33 () Int)
(declare-fun s43 () Int)
(declare-fun s53 () Int)
(declare-fun s14 () Int)
(declare-fun s24 () Int)
(declare-fun s34 () Int)
(declare-fun s44 () Int)
(declare-fun s54 () Int)
(declare-fun s15 () Int)
(declare-fun s25 () Int)
(declare-fun s35 () Int)
(declare-fun s45 () Int)
(declare-fun s55 () Int)
(assert (or (= VM1Type 1.0)
    (= VM1Type 2.0)
    (= VM1Type 3.0)
    (= VM1Type 4.0)
    (= VM1Type 5.0)
    (= VM1Type 6.0)
    (= VM1Type 7.0)
    (= VM1Type 8.0)
    (= VM1Type 9.0)
    (= VM1Type 10.0)))
(assert (or (= VM2Type 1.0)
    (= VM2Type 2.0)
    (= VM2Type 3.0)
    (= VM2Type 4.0)
    (= VM2Type 5.0)
    (= VM2Type 6.0)
    (= VM2Type 7.0)
    (= VM2Type 8.0)
    (= VM2Type 9.0)
    (= VM2Type 10.0)))
(assert (or (= VM3Type 1.0)
    (= VM3Type 2.0)
    (= VM3Type 3.0)
    (= VM3Type 4.0)
    (= VM3Type 5.0)
    (= VM3Type 6.0)
    (= VM3Type 7.0)
    (= VM3Type 8.0)
    (= VM3Type 9.0)
    (= VM3Type 10.0)))
(assert (or (= VM4Type 1.0)
    (= VM4Type 2.0)
    (= VM4Type 3.0)
    (= VM4Type 4.0)
    (= VM4Type 5.0)
    (= VM4Type 6.0)
    (= VM4Type 7.0)
    (= VM4Type 8.0)
    (= VM4Type 9.0)
    (= VM4Type 10.0)))
(assert (or (= VM5Type 1.0)
    (= VM5Type 2.0)
    (= VM5Type 3.0)
    (= VM5Type 4.0)
    (= VM5Type 5.0)
    (= VM5Type 6.0)
    (= VM5Type 7.0)
    (= VM5Type 8.0)
    (= VM5Type 9.0)
    (= VM5Type 10.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1)
    (= PriceProv1 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2)
    (= PriceProv2 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3)
    (= PriceProv3 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4)
    (= PriceProv4 0.0)))
(assert (=> ((_ pbeq 0 1 1 1 1 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5)
    (= PriceProv5 0.0)))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 1.0))
    (and (= PriceProv1 8403.0)
         (= ProcProv1 64.0)
         (= MemProv1 976000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 1.0))
    (and (= PriceProv2 8403.0)
         (= ProcProv2 64.0)
         (= MemProv2 976000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 1.0))
    (and (= PriceProv3 8403.0)
         (= ProcProv3 64.0)
         (= MemProv3 976000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 1.0))
    (and (= PriceProv4 8403.0)
         (= ProcProv4 64.0)
         (= MemProv4 976000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 1.0))
    (and (= PriceProv5 8403.0)
         (= ProcProv5 64.0)
         (= MemProv5 976000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 2.0))
    (and (= PriceProv1 9152.0)
         (= ProcProv1 64.0)
         (= MemProv1 488000.0)
         (= StorageProv1 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 2.0))
    (and (= PriceProv2 9152.0)
         (= ProcProv2 64.0)
         (= MemProv2 488000.0)
         (= StorageProv2 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 2.0))
    (and (= PriceProv3 9152.0)
         (= ProcProv3 64.0)
         (= MemProv3 488000.0)
         (= StorageProv3 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 2.0))
    (and (= PriceProv4 9152.0)
         (= ProcProv4 64.0)
         (= MemProv4 488000.0)
         (= StorageProv4 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 2.0))
    (and (= PriceProv5 9152.0)
         (= ProcProv5 64.0)
         (= MemProv5 488000.0)
         (= StorageProv5 8000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 3.0))
    (and (= PriceProv1 2808.0)
         (= ProcProv1 32.0)
         (= MemProv1 60000.0)
         (= StorageProv1 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 3.0))
    (and (= PriceProv2 2808.0)
         (= ProcProv2 32.0)
         (= MemProv2 60000.0)
         (= StorageProv2 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 3.0))
    (and (= PriceProv3 2808.0)
         (= ProcProv3 32.0)
         (= MemProv3 60000.0)
         (= StorageProv3 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 3.0))
    (and (= PriceProv4 2808.0)
         (= ProcProv4 32.0)
         (= MemProv4 60000.0)
         (= StorageProv4 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 3.0))
    (and (= PriceProv5 2808.0)
         (= ProcProv5 32.0)
         (= MemProv5 60000.0)
         (= StorageProv5 2000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 4.0))
    (and (= PriceProv1 1600.0)
         (= ProcProv1 16.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 4.0))
    (and (= PriceProv2 1600.0)
         (= ProcProv2 16.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 4.0))
    (and (= PriceProv3 1600.0)
         (= ProcProv3 16.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 4.0))
    (and (= PriceProv4 1600.0)
         (= ProcProv4 16.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 4.0))
    (and (= PriceProv5 1600.0)
         (= ProcProv5 16.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 5.0))
    (and (= PriceProv1 5520.0)
         (= ProcProv1 17.0)
         (= MemProv1 117000.0)
         (= StorageProv1 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 5.0))
    (and (= PriceProv2 5520.0)
         (= ProcProv2 17.0)
         (= MemProv2 117000.0)
         (= StorageProv2 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 5.0))
    (and (= PriceProv3 5520.0)
         (= ProcProv3 17.0)
         (= MemProv3 117000.0)
         (= StorageProv3 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 5.0))
    (and (= PriceProv4 5520.0)
         (= ProcProv4 17.0)
         (= MemProv4 117000.0)
         (= StorageProv4 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 5.0))
    (and (= PriceProv5 5520.0)
         (= ProcProv5 17.0)
         (= MemProv5 117000.0)
         (= StorageProv5 24000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 6.0))
    (and (= PriceProv1 688.0)
         (= ProcProv1 8.0)
         (= MemProv1 61000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 6.0))
    (and (= PriceProv2 688.0)
         (= ProcProv2 8.0)
         (= MemProv2 61000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 6.0))
    (and (= PriceProv3 688.0)
         (= ProcProv3 8.0)
         (= MemProv3 61000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 6.0))
    (and (= PriceProv4 688.0)
         (= ProcProv4 8.0)
         (= MemProv4 61000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 6.0))
    (and (= PriceProv5 688.0)
         (= ProcProv5 8.0)
         (= MemProv5 61000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 7.0))
    (and (= PriceProv1 1209.0)
         (= ProcProv1 4.0)
         (= MemProv1 122000.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 7.0))
    (and (= PriceProv2 1209.0)
         (= ProcProv2 4.0)
         (= MemProv2 122000.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 7.0))
    (and (= PriceProv3 1209.0)
         (= ProcProv3 4.0)
         (= MemProv3 122000.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 7.0))
    (and (= PriceProv4 1209.0)
         (= ProcProv4 4.0)
         (= MemProv4 122000.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 7.0))
    (and (= PriceProv5 1209.0)
         (= ProcProv5 4.0)
         (= MemProv5 122000.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 8.0))
    (and (= PriceProv1 379.0)
         (= ProcProv1 4.0)
         (= MemProv1 30500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 8.0))
    (and (= PriceProv2 379.0)
         (= ProcProv2 4.0)
         (= MemProv2 30500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 8.0))
    (and (= PriceProv3 379.0)
         (= ProcProv3 4.0)
         (= MemProv3 30500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 8.0))
    (and (= PriceProv4 379.0)
         (= ProcProv4 4.0)
         (= MemProv4 30500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 8.0))
    (and (= PriceProv5 379.0)
         (= ProcProv5 4.0)
         (= MemProv5 30500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 9.0))
    (and (= PriceProv1 146.0)
         (= ProcProv1 2.0)
         (= MemProv1 7500.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 9.0))
    (and (= PriceProv2 146.0)
         (= ProcProv2 2.0)
         (= MemProv2 7500.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 9.0))
    (and (= PriceProv3 146.0)
         (= ProcProv3 2.0)
         (= MemProv3 7500.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 9.0))
    (and (= PriceProv4 146.0)
         (= ProcProv4 2.0)
         (= MemProv4 7500.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 9.0))
    (and (= PriceProv5 146.0)
         (= ProcProv5 2.0)
         (= MemProv5 7500.0)
         (= StorageProv5 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) (= VM1Type 10.0))
    (and (= PriceProv1 134.0)
         (= ProcProv1 1.0)
         (= MemProv1 3750.0)
         (= StorageProv1 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) (= VM2Type 10.0))
    (and (= PriceProv2 134.0)
         (= ProcProv2 1.0)
         (= MemProv2 3750.0)
         (= StorageProv2 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) (= VM3Type 10.0))
    (and (= PriceProv3 134.0)
         (= ProcProv3 1.0)
         (= MemProv3 3750.0)
         (= StorageProv3 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) (= VM4Type 10.0))
    (and (= PriceProv4 134.0)
         (= ProcProv4 1.0)
         (= MemProv4 3750.0)
         (= StorageProv4 1000.0))))
(assert (=> (and ((_ at-least 1) C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) (= VM5Type 10.0))
    (and (= PriceProv5 134.0)
         (= ProcProv5 1.0)
         (= MemProv5 3750.0)
         (= StorageProv5 1000.0))))
(assert ((_ at-most 1) C1_VM1 C2_VM1))
(assert ((_ at-most 1) C1_VM1 C3_VM1))
(assert ((_ at-most 1) C1_VM1 C4_VM1))
(assert ((_ at-most 1) C1_VM1 C5_VM1))
(assert ((_ at-most 1) C1_VM2 C2_VM2))
(assert ((_ at-most 1) C1_VM2 C3_VM2))
(assert ((_ at-most 1) C1_VM2 C4_VM2))
(assert ((_ at-most 1) C1_VM2 C5_VM2))
(assert ((_ at-most 1) C1_VM3 C2_VM3))
(assert ((_ at-most 1) C1_VM3 C3_VM3))
(assert ((_ at-most 1) C1_VM3 C4_VM3))
(assert ((_ at-most 1) C1_VM3 C5_VM3))
(assert ((_ at-most 1) C1_VM4 C2_VM4))
(assert ((_ at-most 1) C1_VM4 C3_VM4))
(assert ((_ at-most 1) C1_VM4 C4_VM4))
(assert ((_ at-most 1) C1_VM4 C5_VM4))
(assert ((_ at-most 1) C1_VM5 C2_VM5))
(assert ((_ at-most 1) C1_VM5 C3_VM5))
(assert ((_ at-most 1) C1_VM5 C4_VM5))
(assert ((_ at-most 1) C1_VM5 C5_VM5))
(assert ((_ at-most 1) C5_VM1 C3_VM1))
(assert ((_ at-most 1) C5_VM1 C4_VM1))
(assert ((_ at-most 1) C5_VM2 C3_VM2))
(assert ((_ at-most 1) C5_VM2 C4_VM2))
(assert ((_ at-most 1) C5_VM3 C3_VM3))
(assert ((_ at-most 1) C5_VM3 C4_VM3))
(assert ((_ at-most 1) C5_VM4 C3_VM4))
(assert ((_ at-most 1) C5_VM4 C4_VM4))
(assert ((_ at-most 1) C5_VM5 C3_VM5))
(assert ((_ at-most 1) C5_VM5 C4_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ pbeq 1 1 1 1 1 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert ((_ at-least 1) C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5))
(assert ((_ at-least 1) C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5))
(assert ((_ at-least 1) C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5))
(assert ((_ at-least 1) C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5))
(assert ((_ at-least 1) C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5))
(assert (=> (not C1_VM1) (= p11 0)))
(assert (=> C1_VM1 (= p11 4)))
(assert (=> (not C2_VM1) (= p21 0)))
(assert (=> C2_VM1 (= p21 2)))
(assert (=> (not C3_VM1) (= p31 0)))
(assert (=> C3_VM1 (= p31 4)))
(assert (=> (not C4_VM1) (= p41 0)))
(assert (=> C4_VM1 (= p41 2)))
(assert (=> (not C5_VM1) (= p51 0)))
(assert (=> C5_VM1 (= p51 4)))
(assert (=> (not C1_VM2) (= p12 0)))
(assert (=> C1_VM2 (= p12 4)))
(assert (=> (not C2_VM2) (= p22 0)))
(assert (=> C2_VM2 (= p22 2)))
(assert (=> (not C3_VM2) (= p32 0)))
(assert (=> C3_VM2 (= p32 4)))
(assert (=> (not C4_VM2) (= p42 0)))
(assert (=> C4_VM2 (= p42 2)))
(assert (=> (not C5_VM2) (= p52 0)))
(assert (=> C5_VM2 (= p52 4)))
(assert (=> (not C1_VM3) (= p13 0)))
(assert (=> C1_VM3 (= p13 4)))
(assert (=> (not C2_VM3) (= p23 0)))
(assert (=> C2_VM3 (= p23 2)))
(assert (=> (not C3_VM3) (= p33 0)))
(assert (=> C3_VM3 (= p33 4)))
(assert (=> (not C4_VM3) (= p43 0)))
(assert (=> C4_VM3 (= p43 2)))
(assert (=> (not C5_VM3) (= p53 0)))
(assert (=> C5_VM3 (= p53 4)))
(assert (=> (not C1_VM4) (= p14 0)))
(assert (=> C1_VM4 (= p14 4)))
(assert (=> (not C2_VM4) (= p24 0)))
(assert (=> C2_VM4 (= p24 2)))
(assert (=> (not C3_VM4) (= p34 0)))
(assert (=> C3_VM4 (= p34 4)))
(assert (=> (not C4_VM4) (= p44 0)))
(assert (=> C4_VM4 (= p44 2)))
(assert (=> (not C5_VM4) (= p54 0)))
(assert (=> C5_VM4 (= p54 4)))
(assert (=> (not C1_VM5) (= p15 0)))
(assert (=> C1_VM5 (= p15 4)))
(assert (=> (not C2_VM5) (= p25 0)))
(assert (=> C2_VM5 (= p25 2)))
(assert (=> (not C3_VM5) (= p35 0)))
(assert (=> C3_VM5 (= p35 4)))
(assert (=> (not C4_VM5) (= p45 0)))
(assert (=> C4_VM5 (= p45 2)))
(assert (=> (not C5_VM5) (= p55 0)))
(assert (=> C5_VM5 (= p55 4)))
(assert (<= (to_real (+ 0 p11 p21 p31 p41 p51)) ProcProv1))
(assert (<= (to_real (+ 0 p12 p22 p32 p42 p52)) ProcProv2))
(assert (<= (to_real (+ 0 p13 p23 p33 p43 p53)) ProcProv3))
(assert (<= (to_real (+ 0 p14 p24 p34 p44 p54)) ProcProv4))
(assert (<= (to_real (+ 0 p15 p25 p35 p45 p55)) ProcProv5))
(assert (=> (not C1_VM1) (= m11 0)))
(assert (=> C1_VM1 (= m11 4096)))
(assert (=> (not C2_VM1) (= m21 0)))
(assert (=> C2_VM1 (= m21 2048)))
(assert (=> (not C3_VM1) (= m31 0)))
(assert (=> C3_VM1 (= m31 4096)))
(assert (=> (not C4_VM1) (= m41 0)))
(assert (=> C4_VM1 (= m41 512)))
(assert (=> (not C5_VM1) (= m51 0)))
(assert (=> C5_VM1 (= m51 2048)))
(assert (=> (not C1_VM2) (= m12 0)))
(assert (=> C1_VM2 (= m12 4096)))
(assert (=> (not C2_VM2) (= m22 0)))
(assert (=> C2_VM2 (= m22 2048)))
(assert (=> (not C3_VM2) (= m32 0)))
(assert (=> C3_VM2 (= m32 4096)))
(assert (=> (not C4_VM2) (= m42 0)))
(assert (=> C4_VM2 (= m42 512)))
(assert (=> (not C5_VM2) (= m52 0)))
(assert (=> C5_VM2 (= m52 2048)))
(assert (=> (not C1_VM3) (= m13 0)))
(assert (=> C1_VM3 (= m13 4096)))
(assert (=> (not C2_VM3) (= m23 0)))
(assert (=> C2_VM3 (= m23 2048)))
(assert (=> (not C3_VM3) (= m33 0)))
(assert (=> C3_VM3 (= m33 4096)))
(assert (=> (not C4_VM3) (= m43 0)))
(assert (=> C4_VM3 (= m43 512)))
(assert (=> (not C5_VM3) (= m53 0)))
(assert (=> C5_VM3 (= m53 2048)))
(assert (=> (not C1_VM4) (= m14 0)))
(assert (=> C1_VM4 (= m14 4096)))
(assert (=> (not C2_VM4) (= m24 0)))
(assert (=> C2_VM4 (= m24 2048)))
(assert (=> (not C3_VM4) (= m34 0)))
(assert (=> C3_VM4 (= m34 4096)))
(assert (=> (not C4_VM4) (= m44 0)))
(assert (=> C4_VM4 (= m44 512)))
(assert (=> (not C5_VM4) (= m54 0)))
(assert (=> C5_VM4 (= m54 2048)))
(assert (=> (not C1_VM5) (= m15 0)))
(assert (=> C1_VM5 (= m15 4096)))
(assert (=> (not C2_VM5) (= m25 0)))
(assert (=> C2_VM5 (= m25 2048)))
(assert (=> (not C3_VM5) (= m35 0)))
(assert (=> C3_VM5 (= m35 4096)))
(assert (=> (not C4_VM5) (= m45 0)))
(assert (=> C4_VM5 (= m45 512)))
(assert (=> (not C5_VM5) (= m55 0)))
(assert (=> C5_VM5 (= m55 2048)))
(assert (<= (to_real (+ 0 m11 m21 m31 m41 m51)) MemProv1))
(assert (<= (to_real (+ 0 m12 m22 m32 m42 m52)) MemProv2))
(assert (<= (to_real (+ 0 m13 m23 m33 m43 m53)) MemProv3))
(assert (<= (to_real (+ 0 m14 m24 m34 m44 m54)) MemProv4))
(assert (<= (to_real (+ 0 m15 m25 m35 m45 m55)) MemProv5))
(assert (=> (not C1_VM1) (= s11 0)))
(assert (=> C1_VM1 (= s11 1024)))
(assert (=> (not C2_VM1) (= s21 0)))
(assert (=> C2_VM1 (= s21 512)))
(assert (=> (not C3_VM1) (= s31 0)))
(assert (=> C3_VM1 (= s31 512)))
(assert (=> (not C4_VM1) (= s41 0)))
(assert (=> C4_VM1 (= s41 2000)))
(assert (=> (not C5_VM1) (= s51 0)))
(assert (=> C5_VM1 (= s51 500)))
(assert (=> (not C1_VM2) (= s12 0)))
(assert (=> C1_VM2 (= s12 1024)))
(assert (=> (not C2_VM2) (= s22 0)))
(assert (=> C2_VM2 (= s22 512)))
(assert (=> (not C3_VM2) (= s32 0)))
(assert (=> C3_VM2 (= s32 512)))
(assert (=> (not C4_VM2) (= s42 0)))
(assert (=> C4_VM2 (= s42 2000)))
(assert (=> (not C5_VM2) (= s52 0)))
(assert (=> C5_VM2 (= s52 500)))
(assert (=> (not C1_VM3) (= s13 0)))
(assert (=> C1_VM3 (= s13 1024)))
(assert (=> (not C2_VM3) (= s23 0)))
(assert (=> C2_VM3 (= s23 512)))
(assert (=> (not C3_VM3) (= s33 0)))
(assert (=> C3_VM3 (= s33 512)))
(assert (=> (not C4_VM3) (= s43 0)))
(assert (=> C4_VM3 (= s43 2000)))
(assert (=> (not C5_VM3) (= s53 0)))
(assert (=> C5_VM3 (= s53 500)))
(assert (=> (not C1_VM4) (= s14 0)))
(assert (=> C1_VM4 (= s14 1024)))
(assert (=> (not C2_VM4) (= s24 0)))
(assert (=> C2_VM4 (= s24 512)))
(assert (=> (not C3_VM4) (= s34 0)))
(assert (=> C3_VM4 (= s34 512)))
(assert (=> (not C4_VM4) (= s44 0)))
(assert (=> C4_VM4 (= s44 2000)))
(assert (=> (not C5_VM4) (= s54 0)))
(assert (=> C5_VM4 (= s54 500)))
(assert (=> (not C1_VM5) (= s15 0)))
(assert (=> C1_VM5 (= s15 1024)))
(assert (=> (not C2_VM5) (= s25 0)))
(assert (=> C2_VM5 (= s25 512)))
(assert (=> (not C3_VM5) (= s35 0)))
(assert (=> C3_VM5 (= s35 512)))
(assert (=> (not C4_VM5) (= s45 0)))
(assert (=> C4_VM5 (= s45 2000)))
(assert (=> (not C5_VM5) (= s55 0)))
(assert (=> C5_VM5 (= s55 500)))
(assert (<= (to_real (+ 0 s11 s21 s31 s41 s51)) StorageProv1))
(assert (<= (to_real (+ 0 s12 s22 s32 s42 s52)) StorageProv2))
(assert (<= (to_real (+ 0 s13 s23 s33 s43 s53)) StorageProv3))
(assert (<= (to_real (+ 0 s14 s24 s34 s44 s54)) StorageProv4))
(assert (<= (to_real (+ 0 s15 s25 s35 s45 s55)) StorageProv5))
(minimize (+ 0 p11 p21 p31 p41 p51))
(minimize (+ 0 p12 p22 p32 p42 p52))
(minimize (+ 0 p13 p23 p33 p43 p53))
(minimize (+ 0 p14 p24 p34 p44 p54))
(minimize (+ 0 p15 p25 p35 p45 p55))
(minimize (+ 0 m11 m21 m31 m41 m51))
(minimize (+ 0 m12 m22 m32 m42 m52))
(minimize (+ 0 m13 m23 m33 m43 m53))
(minimize (+ 0 m14 m24 m34 m44 m54))
(minimize (+ 0 m15 m25 m35 m45 m55))
(minimize (+ 0 s11 s21 s31 s41 s51))
(minimize (+ 0 s12 s22 s32 s42 s52))
(minimize (+ 0 s13 s23 s33 s43 s53))
(minimize (+ 0 s14 s24 s34 s44 s54))
(minimize (+ 0 s15 s25 s35 s45 s55))
(minimize (+ 0.0 PriceProv1 PriceProv2 PriceProv3 PriceProv4 PriceProv5))
(check-sat)
